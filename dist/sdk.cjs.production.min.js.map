{"version":3,"file":"sdk.cjs.production.min.js","sources":["../node_modules/regenerator-runtime/runtime.js","../src/configuration.ts","../src/defaultConfiguration.ts","../src/http/xmlSerialization.ts","../src/client.ts","../src/authentication.ts","../src/models/apiValidationSummary.ts","../src/controllers/baseController.ts","../src/controllers/aPIValidationExternalApisController.ts","../src/models/docsValidationSummary.ts","../src/controllers/aPIValidationImportedApisController.ts","../src/models/accept.ts","../src/models/accept2.ts","../src/models/exportFormats.ts","../src/models/authScope.ts","../src/models/authentication.ts","../src/models/codeGenSettings.ts","../src/models/endpointsGroup.ts","../src/models/importValidationSummary.ts","../src/models/metaData.ts","../src/models/server.ts","../src/models/environment.ts","../src/models/attributes.ts","../src/models/parameter.ts","../src/models/serverConfiguration.ts","../src/models/testGenSettings.ts","../src/models/apiEntity.ts","../src/models/platforms.ts","../src/models/importApiVersionViaUrlRequest.ts","../src/models/importApiViaUrlRequest.ts","../src/models/inplaceImportApiViaUrlRequest.ts","../src/controllers/apisManagementController.ts","../src/models/generateSdkViaUrlRequest.ts","../src/models/userCodeGeneration.ts","../src/controllers/codeGenerationExternalApisController.ts","../src/models/aPIEntityCodeGeneration.ts","../src/controllers/codeGenerationImportedApisController.ts","../src/models/accept3.ts","../src/controllers/docsPortalManagementController.ts","../src/models/id.ts","../src/models/link.ts","../src/models/packageRepositories.ts","../src/models/cSNETSTANDARDLIB.ts","../src/models/templatesPackageDeploymentInformation.ts","../src/models/packageDeploymentInformation.ts","../src/models/authorIdentifiers.ts","../src/models/publishedPackage.ts","../src/models/implementationType.ts","../src/models/publishPackageInput.ts","../src/models/updateTemplatesPackageDeploymentInformation.ts","../src/models/updatePackageDeploymentInformation.ts","../src/controllers/packageDeploymentController.ts","../src/models/transformation.ts","../src/models/transformViaUrlRequest.ts","../src/controllers/transformationController.ts","../src/models/contentType.ts"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","/**\n * Apimatic APILib\n *\n * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).\n */\n\n/** An interface for all configuration parameters required by the SDK. */\nexport interface Configuration {\n  timeout: number;\n  environment: Environment;\n  authorization: string;\n  unstable_httpClientOptions?: any;\n}\n\n/** Environments available for API */\nexport enum Environment {\n  Production = 'production',\n}\n","/**\n * Apimatic APILib\n *\n * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).\n */\n\nimport { Configuration, Environment } from './configuration';\n\n/** Default values for the configuration parameters of the client. */\nexport const DEFAULT_CONFIGURATION: Configuration = {\n  timeout: 0,\n  environment: Environment.Production,\n  authorization: 'TODO Authorization value',\n};\n","/**\n * Apimatic APILib\n *\n * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).\n */\n\nexport class XmlSerialization {\n  public xmlSerialize(_rootName: string, _value: unknown): string {\n    throw new Error('XML serialization is not available.');\n  }\n\n  public xmlDeserialize(\n    _rootName: string,\n    _xmlString: string\n  ): Promise<any> {\n    throw new Error('XML deserialization is not available.');\n  }\n}\n","/**\n * Apimatic APILib\n *\n * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).\n */\n\nimport { customHeaderAuthenticationProvider } from './authentication';\nimport {\n  AuthParams,\n  ClientInterface,\n  SdkRequestBuilder,\n  SdkRequestBuilderFactory,\n  Server,\n} from './clientInterface';\nimport { Configuration, Environment } from './configuration';\nimport { DEFAULT_CONFIGURATION } from './defaultConfiguration';\nimport { ApiError } from './core';\nimport {\n  AuthenticatorInterface,\n  createRequestBuilderFactory,\n  HttpClient,\n  HttpClientInterface,\n  XmlSerializerInterface,\n} from './core';\nimport { XmlSerialization } from './http/xmlSerialization';\n\nconst USER_AGENT = 'APIMATIC 3.0';\n\nexport class Client implements ClientInterface {\n  private _config: Readonly<Configuration>;\n  private _requestBuilderFactory: SdkRequestBuilderFactory;\n\n  constructor(config?: Partial<Configuration>) {\n    this._config = {\n      ...DEFAULT_CONFIGURATION,\n      ...config,\n    };\n    this._requestBuilderFactory = createRequestHandlerFactory(\n      server => getBaseUri(server, this._config),\n      customHeaderAuthenticationProvider(this._config),\n      new HttpClient({\n        timeout: this._config.timeout,\n        clientConfigOverrides: this._config.unstable_httpClientOptions,\n      }),\n      [\n        withErrorHandlers,\n        withUserAgent,\n        withAuthenticationByDefault,\n      ],\n      new XmlSerialization()\n    );\n  }\n\n  public getRequestBuilderFactory(): SdkRequestBuilderFactory {\n    return this._requestBuilderFactory;\n  }\n\n  /**\n   * Clone this client and override given configuration options\n   */\n  public withConfiguration(config: Partial<Configuration>) {\n    return new Client({ ...this._config, ...config });\n  }\n}\n\nfunction createHttpClientAdapter(client: HttpClient): HttpClientInterface {\n  return async (request, requestOptions) => {\n    return await client.executeRequest(request, requestOptions);\n  };\n}\n\nfunction getBaseUri(server: Server = 'default', config: Configuration): string {\n  if (config.environment === Environment.Production) {\n    if (server === 'default') {\n      return 'https://apimaticio-test.azurewebsites.net/api';\n    }\n  }\n  throw new Error('Could not get Base URL. Invalid environment or server.');\n}\n\nfunction createRequestHandlerFactory(\n  baseUrlProvider: (server?: Server) => string,\n  authProvider: AuthenticatorInterface<AuthParams>,\n  httpClient: HttpClient,\n  addons: ((rb: SdkRequestBuilder) => void)[],\n  xmlSerializer: XmlSerializerInterface\n): SdkRequestBuilderFactory {\n  const requestBuilderFactory = createRequestBuilderFactory(\n    createHttpClientAdapter(httpClient),\n    baseUrlProvider,\n    ApiError,\n    authProvider,\n    xmlSerializer\n  );\n\n  return tap(requestBuilderFactory, ...addons);\n}\n\nfunction tap(\n  requestBuilderFactory: SdkRequestBuilderFactory,\n  ...callback: ((requestBuilder: SdkRequestBuilder) => void)[]\n): SdkRequestBuilderFactory {\n  return (...args) => {\n    const requestBuilder = requestBuilderFactory(...args);\n    callback.forEach(c => c(requestBuilder));\n    return requestBuilder;\n  };\n}\n\nfunction withErrorHandlers(rb: SdkRequestBuilder) {\n  rb.defaultToError(ApiError);\n}\n\nfunction withUserAgent(rb: SdkRequestBuilder) {\n  rb.header('user-agent', USER_AGENT);\n}\n\nfunction withAuthenticationByDefault(rb: SdkRequestBuilder) {\n  rb.authenticate(true);\n}\n","/**\n * Apimatic APILib\n *\n * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).\n */\n\nimport { mergeHeaders } from './core';\nimport { passThroughInterceptor } from './core';\nimport { AuthenticatorInterface } from './core';\n\n/** None authentication provider */\nexport const noneAuthenticationProvider = () => passThroughInterceptor;\n\nexport const customHeaderAuthenticationProvider = ({\n  authorization,\n}: {\n  authorization: string;\n}): AuthenticatorInterface<boolean> => {\n  return (requiresAuth?: boolean) => {\n    if (!requiresAuth) {\n      return passThroughInterceptor;\n    }\n\n    return (request, options, next) => {\n      const customHeaderParams = {\n        'Authorization': authorization,\n      };\n      mergeHeaders(request.headers ?? {}, customHeaderParams);\n\n      return next(request, options);\n    };\n  };\n};\n","/**\n * Apimatic APILib\n *\n * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).\n */\n\nimport { array, boolean, object, Schema, string } from '../schema';\n\nexport interface ApiValidationSummary {\n  success: boolean;\n  errors: string[];\n  warnings: string[];\n  messages: string[];\n}\n\nexport const apiValidationSummarySchema: Schema<ApiValidationSummary> = object({\n  success: ['success', boolean()],\n  errors: ['errors', array(string())],\n  warnings: ['warnings', array(string())],\n  messages: ['messages', array(string())],\n});\n","/**\n * Apimatic APILib\n *\n * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).\n */\n\nimport { ClientInterface, SdkRequestBuilderFactory } from '../clientInterface';\n\n/** Base class for all controllers */\nexport class BaseController {\n  /** Create a request builder */\n  protected createRequest: SdkRequestBuilderFactory;\n\n  constructor(client: ClientInterface) {\n    this.createRequest = client.getRequestBuilderFactory();\n  }\n}\n","/**\n * Apimatic APILib\n *\n * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).\n */\n\nimport { ApiResponse, FileWrapper, RequestOptions } from '../core';\nimport {\n  ApiValidationSummary,\n  apiValidationSummarySchema,\n} from '../models/apiValidationSummary';\nimport { string } from '../schema';\nimport { BaseController } from './baseController';\n\nexport class APIValidationExternalApisController extends BaseController {\n  /**\n   * Validate an API by uploading the API specification file.\n   *\n   * You can also specify [API Metadata](https://docs.apimatic.io/manage-apis/apimatic-metadata) while\n   * validating the API using this endpoint. When specifying Metadata, the uploaded file will be a zip\n   * file containing the API specification file and the `APIMATIC-META` json file.\n   *\n   * @param file        The API specification file.<br>The type of the specification file should be any\n   *                                   of the [supported formats](https://docs.apimatic.io/api-transformer/overview-\n   *                                   transformer#supported-input-formats).\n   * @return Response from the API call\n   */\n  async validateAPIViaFile(\n    file: FileWrapper,\n    requestOptions?: RequestOptions\n  ): Promise<ApiResponse<ApiValidationSummary>> {\n    const req = this.createRequest('POST', '/validation/validate-via-file');\n    req.baseUrl('default');\n    req.header('ContentType', 'multipart/form-data');\n    req.formData({\n      file: file,\n    });\n    return req.callAsJson(apiValidationSummarySchema, requestOptions);\n  }\n\n  /**\n   * Validate an API by providing the URL of the API specification file.\n   *\n   * You can also specify [API Metadata](https://docs.apimatic.io/manage-apis/apimatic-metadata) while\n   * validating the API using this endpoint. When specifying Metadata, the URL provided will be that of a\n   * zip file containing the API specification file and the `APIMATIC-META` json file.\n   *\n   * @param descriptionUrl The URL for the API specification file.<br><br>**Note:** This URL should be\n   *                                 publicly accessible.\n   * @return Response from the API call\n   */\n  async validateAPIViaURL(\n    descriptionUrl: string,\n    requestOptions?: RequestOptions\n  ): Promise<ApiResponse<ApiValidationSummary>> {\n    const req = this.createRequest('GET', '/validation/validate-via-url');\n    req.baseUrl('default');\n    const mapped = req.prepareArgs({\n      descriptionUrl: [descriptionUrl, string()],\n    });\n    req.query('descriptionUrl', mapped.descriptionUrl);\n    return req.callAsJson(apiValidationSummarySchema, requestOptions);\n  }\n}\n","/**\n * Apimatic APILib\n *\n * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).\n */\n\nimport { array, boolean, object, Schema, string } from '../schema';\n\nexport interface DocsValidationSummary {\n  success: boolean;\n  errors: string[];\n  warnings: string[];\n  messages: string[];\n}\n\nexport const docsValidationSummarySchema: Schema<DocsValidationSummary> = object(\n  {\n    success: ['success', boolean()],\n    errors: ['errors', array(string())],\n    warnings: ['warnings', array(string())],\n    messages: ['messages', array(string())],\n  }\n);\n","/**\n * Apimatic APILib\n *\n * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).\n */\n\nimport { ApiResponse, RequestOptions } from '../core';\nimport {\n  ApiValidationSummary,\n  apiValidationSummarySchema,\n} from '../models/apiValidationSummary';\nimport {\n  DocsValidationSummary,\n  docsValidationSummarySchema,\n} from '../models/docsValidationSummary';\nimport { string } from '../schema';\nimport { BaseController } from './baseController';\n\nexport class APIValidationImportedApisController extends BaseController {\n  /**\n   * Validate an API using the [APIMatic Validator](https://docs.apimatic.io/generate-sdks/overview-\n   * sdks#step-2-api-validation).\n   *\n   * @param apiEntityId   The ID of the API Entity to perform validation for.\n   * @return Response from the API call\n   */\n  async validateAPI(\n    apiEntityId: string,\n    requestOptions?: RequestOptions\n  ): Promise<ApiResponse<ApiValidationSummary>> {\n    const req = this.createRequest('GET');\n    req.baseUrl('default');\n    const mapped = req.prepareArgs({ apiEntityId: [apiEntityId, string()] });\n    req.appendTemplatePath`/api-entities/${mapped.apiEntityId}/api-validation-summary`;\n    return req.callAsJson(apiValidationSummarySchema, requestOptions);\n  }\n\n  /**\n   * Validate an API for documentation generation. This process validates the API for missing examples or\n   * missing descriptions.\n   *\n   * @param apiEntityId   The ID of the API Entity to perform validation for.\n   * @return Response from the API call\n   */\n  async validateAPIForDocs(\n    apiEntityId: string,\n    requestOptions?: RequestOptions\n  ): Promise<ApiResponse<DocsValidationSummary>> {\n    const req = this.createRequest('GET');\n    req.baseUrl('default');\n    const mapped = req.prepareArgs({ apiEntityId: [apiEntityId, string()] });\n    req.appendTemplatePath`/api-entities/${mapped.apiEntityId}/docs-validation-summary`;\n    return req.callAsJson(docsValidationSummarySchema, requestOptions);\n  }\n}\n","/**\n * Apimatic APILib\n *\n * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).\n */\n\nimport { Schema, stringEnum } from '../schema';\n\n/**\n * Enum for Accept\n */\nexport enum Accept {\n  EnumApplicationjson = 'application/json',\n}\n\n/**\n * Schema for Accept\n */\nexport const acceptSchema: Schema<Accept> = stringEnum(Accept);\n","/**\n * Apimatic APILib\n *\n * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).\n */\n\nimport { Schema, stringEnum } from '../schema';\n\n/**\n * Enum for Accept2\n */\nexport enum Accept2 {\n  EnumApplicationvndapimaticapiEntityfullv1json = 'application/vnd.apimatic.apiEntity.full.v1+json',\n}\n\n/**\n * Schema for Accept2\n */\nexport const accept2Schema: Schema<Accept2> = stringEnum(Accept2);\n","/**\n * Apimatic APILib\n *\n * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).\n */\n\nimport { Schema, stringEnum } from '../schema';\n\n/**\n * Enum for ExportFormats\n */\nexport enum ExportFormats {\n  APIMATIC = 'APIMATIC',\n  WADL2009 = 'WADL2009',\n  WSDL = 'WSDL',\n  SWAGGER10 = 'Swagger10',\n  SWAGGER20 = 'Swagger20',\n  SWAGGERYAML = 'SwaggerYaml',\n  OAS3 = 'OpenApi3Json',\n  OPENAPI3YAML = 'OpenApi3Yaml',\n  APIBLUEPRINT = 'APIBluePrint',\n  RAML = 'RAML',\n  RAML10 = 'RAML10',\n  POSTMAN10 = 'Postman10',\n  POSTMAN20 = 'Postman20',\n  GRAPHQLSCHEMA = 'GraphQlSchema',\n}\n\n/**\n * Schema for ExportFormats\n */\nexport const exportFormatsSchema: Schema<ExportFormats> = stringEnum(ExportFormats);\n","/**\n * Apimatic APILib\n *\n * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).\n */\n\nimport { object, Schema, string } from '../schema';\n\nexport interface AuthScope {\n  /** Scope Id */\n  id: string;\n  /** Scope Name */\n  name: string;\n  /** Scope Value */\n  value: string;\n  /** Scope Description */\n  description: string;\n}\n\nexport const authScopeSchema: Schema<AuthScope> = object({\n  id: ['id', string()],\n  name: ['name', string()],\n  value: ['value', string()],\n  description: ['description', string()],\n});\n","/**\n * Apimatic APILib\n *\n * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).\n */\n\nimport { array, lazy, object, Schema, string, unknown } from '../schema';\nimport { AuthScope, authScopeSchema } from './authScope';\n\n/** This Structure encapsulates all details of API authentication. */\nexport interface Authentication {\n  /** Auth Id */\n  id: string;\n  /** Auth Type */\n  authType: string;\n  /** Scope */\n  scopes: AuthScope[];\n  /** Auth Params */\n  parameters: string[];\n  /** Auth Scopes */\n  authScopes: string[];\n  /** Auth Grant Types */\n  authGrantTypes: string[];\n  /** Paramater Formats */\n  paramFormats?: unknown;\n}\n\nexport const authenticationSchema: Schema<Authentication> = object({\n  id: ['id', string()],\n  authType: ['authType', string()],\n  scopes: ['scopes', array(lazy(() => authScopeSchema))],\n  parameters: ['parameters', array(string())],\n  authScopes: ['authScopes', array(string())],\n  authGrantTypes: ['authGrantTypes', array(string())],\n  paramFormats: ['paramFormats', unknown()],\n});\n","/**\n * Apimatic APILib\n *\n * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).\n */\n\nimport { array, boolean, number, object, Schema, string } from '../schema';\n\n/** APIMatic’s code generation engine has various code generation configurations to customise the behaviour and outlook across the generated SDKS. This structure encapsulates all settings for CodeGeneration. */\nexport interface CodeGenSettings {\n  /** Generate asynchronous code for API Calls and deserialization */\n  isAsync: boolean;\n  /** Use HTTP Method prefixes for endpoint wrappers */\n  useHttpMethodPrefix: boolean;\n  /** Use \"Model\" postfixes for generated class names */\n  useModelPrefix: boolean;\n  /** Use \"Enum\" postfixes for enumerated types */\n  useEnumPrefix: boolean;\n  useConstructorsForConfig: boolean;\n  /** Use common SDK library to reduce code duplication */\n  useCommonSdkLibrary: boolean;\n  /** Generates interfaces for controller classes in the generated SDKs */\n  generateInterfaces: boolean;\n  /** Generate Appveyor configuration file */\n  generateAppveyorConfig: boolean;\n  /** Generate CircleCI configuration file */\n  generateCircleConfig: boolean;\n  /** Generate Jenkins configuration file */\n  generateJenkinsConfig: boolean;\n  /** Generate Travis CI configuration file */\n  generateTravisConfig: boolean;\n  /** Use \"AndroidManifest.xml\" for config variables in Android */\n  androidUseAppManifest: boolean;\n  /** Use \"App-Info.plist\" file for config variables in iOS */\n  iosUseAppInfoPlist: boolean;\n  /** Generate \"CoreData\" schema and entity classes in iOS? */\n  iosGenerateCoreData: boolean;\n  /** Enable runscope */\n  runscopeEnabled: boolean;\n  /** Collect Parameters as arrays */\n  collapseParamsToArray: boolean;\n  /** Attempts to preserve parameter order for endpoints */\n  preserveParameterOrder: boolean;\n  /** Append JSON/XML accept and content-type headers */\n  appendContentHeaders: boolean;\n  modelSerializationIsJSON: boolean;\n  /** Return a null value on HTTP 404 */\n  nullify404: boolean;\n  /** Validate required parameters to be Not Null */\n  validateRequiredParameters: boolean;\n  /** Allow models to have additional runtime properties */\n  enableAdditionalModelProperties: boolean;\n  javaUsePropertiesConfig: boolean;\n  /** Use \"Controller\" postfixes for generated controller classes */\n  useControllerPrefix: boolean;\n  /** Use Exception Prefixes */\n  useExceptionPrefix: boolean;\n  /** Parameter Array format with index or without */\n  parameterArrayFormat: string;\n  /** Configure the HTTP client for Objective C */\n  objCHttpClient: string;\n  /** Configure the HTTP client for C# */\n  cSharpHttpClient: string;\n  /** Configure the HTTP client for  Android */\n  androidHttpClient: string;\n  /** Configure the HTTP client for node */\n  nodeHttpClient: string;\n  /** Configure the HTTP client for PHP */\n  phpHttpClient: string;\n  bodySerialization: number;\n  /** Specify type of array serialisation */\n  arraySerialization: string;\n  /** This option specifies the duration (in seconds) after which requests would timeout */\n  timeout: number;\n  /** Enabling this generates code in the SDKs for logging events in the API cycle using a library. */\n  enableLogging: boolean;\n  /** Enabling caching of responses (not available in all languages) */\n  enableHttpCache: boolean;\n  /** Specify number of retries */\n  retries: number;\n  /** Specify retry interval in case of failures */\n  retryInterval: number;\n  /** Generate advanced read me files */\n  generateAdvancedDocs: boolean;\n  /** Store Timezone information for the generation */\n  storeTimezoneInformation: boolean;\n  /** Use \"Controller\" postfixes for generated controller classes */\n  enablePhpComposerVersionString: boolean;\n  /** Specify Security Protocols */\n  securityProtocols: string[];\n  /** Use underscores before and after numbers for underscore case */\n  underscoreNumbers: boolean;\n  /** Allow usage of a Singleton Pattern */\n  useSingletonPattern: boolean;\n  /** Files/dependencies used for linting are not generated if this option is enabled */\n  disableLinting: boolean;\n  /** Create a configuration option in SDKs to optionally skip certificate verification when establishing HTTPS connections. */\n  allowSkippingSSLCertVerification: boolean;\n  /** Apply Customisations */\n  applyCustomizations: string[];\n  /** Enabling this will stop splitting of words when converting identifiers from API specification to language-specific identifiers. */\n  doNotSplitWords: string[];\n  /** Sorts resources such as endpoints, endpoint groups and models in generated documentation */\n  sortResources: boolean;\n  /** Enable a global user agent */\n  enableGlobalUserAgent: boolean;\n}\n\nexport const codeGenSettingsSchema: Schema<CodeGenSettings> = object({\n  isAsync: ['isAsync', boolean()],\n  useHttpMethodPrefix: ['useHttpMethodPrefix', boolean()],\n  useModelPrefix: ['useModelPrefix', boolean()],\n  useEnumPrefix: ['useEnumPrefix', boolean()],\n  useConstructorsForConfig: ['useConstructorsForConfig', boolean()],\n  useCommonSdkLibrary: ['useCommonSdkLibrary', boolean()],\n  generateInterfaces: ['generateInterfaces', boolean()],\n  generateAppveyorConfig: ['generateAppveyorConfig', boolean()],\n  generateCircleConfig: ['generateCircleConfig', boolean()],\n  generateJenkinsConfig: ['generateJenkinsConfig', boolean()],\n  generateTravisConfig: ['generateTravisConfig', boolean()],\n  androidUseAppManifest: ['androidUseAppManifest', boolean()],\n  iosUseAppInfoPlist: ['iosUseAppInfoPlist', boolean()],\n  iosGenerateCoreData: ['iosGenerateCoreData', boolean()],\n  runscopeEnabled: ['runscopeEnabled', boolean()],\n  collapseParamsToArray: ['collapseParamsToArray', boolean()],\n  preserveParameterOrder: ['preserveParameterOrder', boolean()],\n  appendContentHeaders: ['appendContentHeaders', boolean()],\n  modelSerializationIsJSON: ['modelSerializationIsJSON', boolean()],\n  nullify404: ['nullify404', boolean()],\n  validateRequiredParameters: ['validateRequiredParameters', boolean()],\n  enableAdditionalModelProperties: [\n    'enableAdditionalModelProperties',\n    boolean(),\n  ],\n  javaUsePropertiesConfig: ['javaUsePropertiesConfig', boolean()],\n  useControllerPrefix: ['useControllerPrefix', boolean()],\n  useExceptionPrefix: ['useExceptionPrefix', boolean()],\n  parameterArrayFormat: ['parameterArrayFormat', string()],\n  objCHttpClient: ['objCHttpClient', string()],\n  cSharpHttpClient: ['cSharpHttpClient', string()],\n  androidHttpClient: ['androidHttpClient', string()],\n  nodeHttpClient: ['nodeHttpClient', string()],\n  phpHttpClient: ['phpHttpClient', string()],\n  bodySerialization: ['bodySerialization', number()],\n  arraySerialization: ['arraySerialization', string()],\n  timeout: ['timeout', number()],\n  enableLogging: ['enableLogging', boolean()],\n  enableHttpCache: ['enableHttpCache', boolean()],\n  retries: ['retries', number()],\n  retryInterval: ['retryInterval', number()],\n  generateAdvancedDocs: ['generateAdvancedDocs', boolean()],\n  storeTimezoneInformation: ['storeTimezoneInformation', boolean()],\n  enablePhpComposerVersionString: ['enablePhpComposerVersionString', boolean()],\n  securityProtocols: ['securityProtocols', array(string())],\n  underscoreNumbers: ['underscoreNumbers', boolean()],\n  useSingletonPattern: ['useSingletonPattern', boolean()],\n  disableLinting: ['disableLinting', boolean()],\n  allowSkippingSSLCertVerification: [\n    'allowSkippingSSLCertVerification',\n    boolean(),\n  ],\n  applyCustomizations: ['applyCustomizations', array(string())],\n  doNotSplitWords: ['doNotSplitWords', array(string())],\n  sortResources: ['sortResources', boolean()],\n  enableGlobalUserAgent: ['enableGlobalUserAgent', boolean()],\n});\n","/**\n * Apimatic APILib\n *\n * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).\n */\n\nimport { object, Schema, string } from '../schema';\n\n/** This structure encapsulates all the attributes of an API Endpoints Group. */\nexport interface EndpointsGroup {\n  name: string;\n  description: string;\n}\n\nexport const endpointsGroupSchema: Schema<EndpointsGroup> = object({\n  name: ['name', string()],\n  description: ['description', string()],\n});\n","/**\n * Apimatic APILib\n *\n * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).\n */\n\nimport { array, boolean, object, Schema, string } from '../schema';\n\nexport interface ImportValidationSummary {\n  success: boolean;\n  errors: string[];\n  warnings: string[];\n  messages: string[];\n}\n\nexport const importValidationSummarySchema: Schema<ImportValidationSummary> = object(\n  {\n    success: ['success', boolean()],\n    errors: ['errors', array(string())],\n    warnings: ['warnings', array(string())],\n    messages: ['messages', array(string())],\n  }\n);\n","/**\n * Apimatic APILib\n *\n * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).\n */\n\nimport { lazy, object, Schema } from '../schema';\nimport {\n  ApiValidationSummary,\n  apiValidationSummarySchema,\n} from './apiValidationSummary';\nimport {\n  DocsValidationSummary,\n  docsValidationSummarySchema,\n} from './docsValidationSummary';\nimport {\n  ImportValidationSummary,\n  importValidationSummarySchema,\n} from './importValidationSummary';\n\nexport interface MetaData {\n  importValidationSummary: ImportValidationSummary;\n  apiValidationSummary: ApiValidationSummary;\n  docsValidationSummary: DocsValidationSummary;\n}\n\nexport const metaDataSchema: Schema<MetaData> = object({\n  importValidationSummary: [\n    'importValidationSummary',\n    lazy(() => importValidationSummarySchema),\n  ],\n  apiValidationSummary: [\n    'apiValidationSummary',\n    lazy(() => apiValidationSummarySchema),\n  ],\n  docsValidationSummary: [\n    'docsValidationSummary',\n    lazy(() => docsValidationSummarySchema),\n  ],\n});\n","/**\n * Apimatic APILib\n *\n * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).\n */\n\nimport { object, Schema, string } from '../schema';\n\n/** The user can specify multiple servers within an environment. A server comprises of a name and a URL. The names of the hosts remain consistent over different environments but their values may vary. The URL values can contain any number of parameters defined. */\nexport interface Server {\n  /** Unique Server identifier */\n  id: string;\n  /** Server Name */\n  name: string;\n  /** Server URL */\n  url: string;\n}\n\nexport const serverSchema: Schema<Server> = object({\n  id: ['id', string()],\n  name: ['name', string()],\n  url: ['url', string()],\n});\n","/**\n * Apimatic APILib\n *\n * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).\n */\n\nimport { array, lazy, object, Schema, string } from '../schema';\nimport { Server, serverSchema } from './server';\n\n/** An environment consists of a set of servers with base URL values. The environment can be changed programatically allowing rapid switching between different environments. For example the user can specify a Production and Testing Environment and switch between them in the generated SDK. */\nexport interface Environment {\n  /** Unique Environment Identifier */\n  id: string;\n  /** Environment Name */\n  name: string;\n  /** The user can specify multiple servers within an environment. A server comprises of a name and a url. */\n  servers: Server[];\n}\n\nexport const environmentSchema: Schema<Environment> = object({\n  id: ['id', string()],\n  name: ['name', string()],\n  servers: ['servers', array(lazy(() => serverSchema))],\n});\n","/**\n * Apimatic APILib\n *\n * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).\n */\n\nimport { object, Schema, string } from '../schema';\n\n/** The structure contain attribute details of a parameter type. */\nexport interface Attributes {\n  /** Unique Attribute Identifier */\n  id: string;\n}\n\nexport const attributesSchema: Schema<Attributes> = object({\n  id: ['id', string()],\n});\n","/**\n * Apimatic APILib\n *\n * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).\n */\n\nimport { boolean, lazy, object, Schema, string } from '../schema';\nimport { Attributes, attributesSchema } from './attributes';\n\n/** Parameters are options passed with the endpoint */\nexport interface Parameter {\n  /** If parameter is optional */\n  optional: boolean;\n  /** Type of Parameter */\n  type: string;\n  /** IF Parameter is constant */\n  constant: boolean;\n  /** If Param is collected as array */\n  isArray: boolean;\n  isStream: boolean;\n  isAttribute: boolean;\n  isMap: boolean;\n  /** The structure contain attribute details of a parameter type. */\n  attributes: Attributes;\n  /** If Parameter is nullable */\n  nullable: boolean;\n  /** Unique Parameter identifier */\n  id: string;\n  /** Parameter Name */\n  name: string;\n  /** Parameter Description */\n  description: string;\n  /** Default Values of a Parameter */\n  defaultValue: string;\n  /** Specify Parameter Format */\n  paramFormat: string;\n}\n\nexport const parameterSchema: Schema<Parameter> = object({\n  optional: ['optional', boolean()],\n  type: ['type', string()],\n  constant: ['constant', boolean()],\n  isArray: ['isArray', boolean()],\n  isStream: ['isStream', boolean()],\n  isAttribute: ['isAttribute', boolean()],\n  isMap: ['isMap', boolean()],\n  attributes: ['attributes', lazy(() => attributesSchema)],\n  nullable: ['nullable', boolean()],\n  id: ['id', string()],\n  name: ['name', string()],\n  description: ['description', string()],\n  defaultValue: ['defaultValue', string()],\n  paramFormat: ['ParamFormat', string()],\n});\n","/**\n * Apimatic APILib\n *\n * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).\n */\n\nimport { array, lazy, object, Schema, string } from '../schema';\nimport { Environment, environmentSchema } from './environment';\nimport { Parameter, parameterSchema } from './parameter';\n\n/** Server configurations can be used to create multiple environments, multiple servers that can be used with specific endpoints and server URLs with template paramters. */\nexport interface ServerConfiguration {\n  /** Server Config Identifier */\n  id: string;\n  /** Default Environment */\n  defaultEnvironment: string;\n  /** Default Server */\n  defaultServer: string;\n  /** Environment Identifier and Name */\n  environments: Environment[];\n  /** Parameter Attributes */\n  parameters: Parameter[];\n}\n\nexport const serverConfigurationSchema: Schema<ServerConfiguration> = object({\n  id: ['id', string()],\n  defaultEnvironment: ['defaultEnvironment', string()],\n  defaultServer: ['defaultServer', string()],\n  environments: ['environments', array(lazy(() => environmentSchema))],\n  parameters: ['parameters', array(lazy(() => parameterSchema))],\n});\n","/**\n * Apimatic APILib\n *\n * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).\n */\n\nimport { number, object, Schema, unknown } from '../schema';\n\n/** This structure helps specify additional test configurations which affects how test cases are generated. */\nexport interface TestGenSettings {\n  /** Error margin for comparing values in decimal places */\n  precisionDelta: number;\n  /** Number of seconds after which if the endpoint is not returning any response, the test is forced to fail e.g. a timeout of 60 */\n  testTimeout: number;\n  /** The parameters allows to provide values for configuration file for use in the test environment */\n  configuration?: unknown;\n}\n\nexport const testGenSettingsSchema: Schema<TestGenSettings> = object({\n  precisionDelta: ['precisionDelta', number()],\n  testTimeout: ['testTimeout', number()],\n  configuration: ['configuration', unknown()],\n});\n","/**\n * Apimatic APILib\n *\n * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).\n */\n\nimport {\n  array,\n  boolean,\n  lazy,\n  object,\n  optional,\n  Schema,\n  string,\n} from '../schema';\nimport { Authentication, authenticationSchema } from './authentication';\nimport { CodeGenSettings, codeGenSettingsSchema } from './codeGenSettings';\nimport { EndpointsGroup, endpointsGroupSchema } from './endpointsGroup';\nimport { MetaData, metaDataSchema } from './metaData';\nimport {\n  ServerConfiguration,\n  serverConfigurationSchema,\n} from './serverConfiguration';\nimport { TestGenSettings, testGenSettingsSchema } from './testGenSettings';\n\n/** The API Entity Structure encapsulates all the details of an API Entity. An API entity is a unique API Version. */\nexport interface ApiEntity {\n  /** Unique API Entity identifier */\n  id: string;\n  /** Enrcypted API Entity Id */\n  encryptedId: string;\n  /** API Integration Key. Obtain from API Card on Dashboard. */\n  apiKey: string;\n  /** Unique API Group Identifier */\n  apiGroupId: string;\n  /** Cover Image */\n  imageUri: string;\n  /** Entity creation date */\n  creationDate: string;\n  /** API Status (Deprecated) */\n  mPublic: boolean;\n  /** API Entity  Name */\n  name: string;\n  /** Description of the API */\n  description: string;\n  /** Entity Version Number */\n  version: string;\n  /** Header Content */\n  additionalHeaders: string[];\n  /** This Structure encapsulates all details of API authentication. */\n  authentication: Authentication;\n  /** APIMatic’s code generation engine has various code generation configurations to customise the behaviour and outlook across the generated SDKS. This structure encapsulates all settings for CodeGeneration. */\n  codeGenSettings: CodeGenSettings;\n  /** This structure helps specify additional test configurations which affects how test cases are generated. */\n  testGenSettings: TestGenSettings;\n  /** API Errors */\n  errors: string[];\n  /** Server configurations can be used to create multiple environments, multiple servers that can be used with specific endpoints and server URLs with template paramters. */\n  serverConfiguration: ServerConfiguration;\n  /** API Endpoint Groups */\n  endpointsGroup?: EndpointsGroup[];\n  metaData: MetaData;\n}\n\nexport const apiEntitySchema: Schema<ApiEntity> = object({\n  id: ['id', string()],\n  encryptedId: ['encryptedId', string()],\n  apiKey: ['apiKey', string()],\n  apiGroupId: ['apiGroupId', string()],\n  imageUri: ['imageUri', string()],\n  creationDate: ['creationDate', string()],\n  mPublic: ['public', boolean()],\n  name: ['name', string()],\n  description: ['description', string()],\n  version: ['version', string()],\n  additionalHeaders: ['additionalHeaders', array(string())],\n  authentication: ['authentication', lazy(() => authenticationSchema)],\n  codeGenSettings: ['codeGenSettings', lazy(() => codeGenSettingsSchema)],\n  testGenSettings: ['testGenSettings', lazy(() => testGenSettingsSchema)],\n  errors: ['errors', array(string())],\n  serverConfiguration: [\n    'serverConfiguration',\n    lazy(() => serverConfigurationSchema),\n  ],\n  endpointsGroup: [\n    'endpointsGroup',\n    optional(array(lazy(() => endpointsGroupSchema))),\n  ],\n  metaData: ['metaData', lazy(() => metaDataSchema)],\n});\n","/**\n * Apimatic APILib\n *\n * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).\n */\n\nimport { Schema, stringEnum } from '../schema';\n\n/**\n * Enum for Platforms\n */\nexport enum Platforms {\n  CSNETSTANDARDLIB = 'CS_NET_STANDARD_LIB',\n  JAVAECLIPSEJRELIB = 'JAVA_ECLIPSE_JRE_LIB',\n  PHPGENERICLIBV2 = 'PHP_GENERIC_LIB',\n  PYTHONGENERICLIB = 'PYTHON_GENERIC_LIB',\n  RUBYGENERICLIB = 'RUBY_GENERIC_LIB',\n  TSGENERICLIB = 'TS_GENERIC_LIB',\n}\n\n/**\n * Schema for Platforms\n */\nexport const platformsSchema: Schema<Platforms> = stringEnum(Platforms);\n","/**\n * Apimatic APILib\n *\n * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).\n */\n\nimport { object, Schema, string } from '../schema';\n\n/** This structure contains details of importing a new API Version */\nexport interface ImportApiVersionViaUrlRequest {\n  /** The version number with which the new API version will be imported. This version number will override the version specified in the API specification file.<br>APIMatic recommends versioning the API with the [versioning scheme](https://docs.apimatic.io/define-apis/basic-settings/#version) documented in the docs. */\n  versionOverride: string;\n  /** The URL for the API specification file.<br><br>**Note:** This URL should be publicly accessible. */\n  url: string;\n}\n\nexport const importApiVersionViaUrlRequestSchema: Schema<ImportApiVersionViaUrlRequest> = object(\n  { versionOverride: ['version_override', string()], url: ['url', string()] }\n);\n","/**\n * Apimatic APILib\n *\n * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).\n */\n\nimport { object, Schema, string } from '../schema';\n\n/** Contains a url field to allow Apis to be imported via url */\nexport interface ImportApiViaUrlRequest {\n  /** The URL for the API specification file.<br><br>**Note:** This URL should be publicly accessible. */\n  url: string;\n}\n\nexport const importApiViaUrlRequestSchema: Schema<ImportApiViaUrlRequest> = object(\n  { url: ['url', string()] }\n);\n","/**\n * Apimatic APILib\n *\n * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).\n */\n\nimport { object, Schema, string } from '../schema';\n\n/** Contains a url field to allow Apis to be imported via url */\nexport interface InplaceImportApiViaUrlRequest {\n  /** The URL for the API specification file.<br><br>**Note:** This URL should be publicly accessible. */\n  url: string;\n}\n\nexport const inplaceImportApiViaUrlRequestSchema: Schema<InplaceImportApiViaUrlRequest> = object(\n  { url: ['url', string()] }\n);\n","/**\n * Apimatic APILib\n *\n * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).\n */\n\nimport { ApiResponse, FileWrapper, RequestOptions } from '../core';\nimport { Accept, acceptSchema } from '../models/accept';\nimport { Accept2, accept2Schema } from '../models/accept2';\nimport { ApiEntity, apiEntitySchema } from '../models/apiEntity';\nimport { ExportFormats, exportFormatsSchema } from '../models/exportFormats';\nimport {\n  ImportApiVersionViaUrlRequest,\n  importApiVersionViaUrlRequestSchema,\n} from '../models/importApiVersionViaUrlRequest';\nimport {\n  ImportApiViaUrlRequest,\n  importApiViaUrlRequestSchema,\n} from '../models/importApiViaUrlRequest';\nimport {\n  InplaceImportApiViaUrlRequest,\n  inplaceImportApiViaUrlRequestSchema,\n} from '../models/inplaceImportApiViaUrlRequest';\nimport { string } from '../schema';\nimport { BaseController } from './baseController';\n\nexport class ApisManagementController extends BaseController {\n  /**\n   * Import an API into the APIMatic Dashboard by uploading the API specification file.\n   *\n   * You can also specify [API Metadata](https://docs.apimatic.io/manage-apis/apimatic-metadata) while\n   * importing the API using this endpoint. When specifying Metadata, the uploaded file will be a zip\n   * file containing the API specification file and the `APIMATIC-META` json file.\n   *\n   * @param file        The API specification file.<br>The type of the specification file should be any\n   *                                   of the [supported formats](https://docs.apimatic.io/api-transformer/overview-\n   *                                   transformer#supported-input-formats).\n   * @return Response from the API call\n   */\n  async importAPIViaFile(\n    file: FileWrapper,\n    requestOptions?: RequestOptions\n  ): Promise<ApiResponse<ApiEntity>> {\n    const req = this.createRequest('POST', '/api-entities/import-via-file');\n    req.header('ContentType', 'multipart/form-data');\n    req.formData({\n      file: file,\n    });\n    return req.callAsJson(apiEntitySchema, requestOptions);\n  }\n\n  /**\n   * Import an API into the APIMatic Dashboard by providing the URL of the API specification file.\n   *\n   * You can also specify [API Metadata](https://docs.apimatic.io/manage-apis/apimatic-metadata) while\n   * importing the API using this endpoint. When specifying Metadata, the URL provided will be that of a\n   * zip file containing the API specification file and the `APIMATIC-META` json file.\n   *\n   * @param body         Request Body\n   * @return Response from the API call\n   */\n  async importAPIViaURL(\n    body: ImportApiViaUrlRequest,\n    requestOptions?: RequestOptions\n  ): Promise<ApiResponse<ApiEntity>> {\n    const req = this.createRequest('POST', '/api-entities/import-via-url');\n    const mapped = req.prepareArgs({\n      body: [body, importApiViaUrlRequestSchema],\n    });\n    req.header(\n      'Content-Type',\n      'application/vnd.apimatic.apiEntityUrlImportDto.v1+json'\n    );\n    req.json(mapped.body);\n    return req.callAsJson(apiEntitySchema, requestOptions);\n  }\n\n  /**\n   * Import a new version for an API, against an existing API Group, by uploading the API specification\n   * file.\n   *\n   * You can also specify [API Metadata](https://docs.apimatic.io/manage-apis/apimatic-metadata) while\n   * importing the API version using this endpoint. When specifying Metadata, the uploaded file will be a\n   * zip file containing the API specification file and the `APIMATIC-META` json file.\n   *\n   * @param apiGroupId       The ID of the API Group for which to import a new API version.\n   * @param accept\n   * @param versionOverride  The version number with which the new API version will be imported. This\n   *                                        version number will override the version specified in the API specification\n   *                                        file.<br>APIMatic recommends versioning the API with the [versioning\n   *                                        scheme](https://docs.apimatic.io/define-apis/basic-settings/#version)\n   *                                        documented in the docs.\n   * @param file             The API specification file.<br>The type of the specification file should\n   *                                        be any of the [supported formats](https://docs.apimatic.io/api-\n   *                                        transformer/overview-transformer#supported-input-formats).\n   * @return Response from the API call\n   */\n  async importNewAPIVersionViaFile(\n    apiGroupId: string,\n    accept: Accept,\n    versionOverride: string,\n    file: FileWrapper,\n    requestOptions?: RequestOptions\n  ): Promise<ApiResponse<ApiEntity>> {\n    const req = this.createRequest('POST');\n    const mapped = req.prepareArgs({\n      apiGroupId: [apiGroupId, string()],\n      accept: [accept, acceptSchema],\n      versionOverride: [versionOverride, string()],\n    });\n    req.header('Accept', mapped.accept);\n    req.header('Content-Type', 'multipart/form-data');\n    req.formData({\n      version_override: mapped.versionOverride,\n      file: file,\n    });\n    req.appendTemplatePath`/api-groups/${mapped.apiGroupId}/api-entities/import-via-file`;\n    return req.callAsJson(apiEntitySchema, requestOptions);\n  }\n\n  /**\n   * Import a new version for an API, against an existing API Group, by providing the URL of the API\n   * specification file.\n   *\n   * You can also specify [API Metadata](https://docs.apimatic.io/manage-apis/apimatic-metadata) while\n   * importing the API version using this endpoint. When specifying Metadata, the URL provided will be\n   * that of a zip file containing the API specification file and the `APIMATIC-META` json file.\n   *\n   * @param apiGroupId   The ID of the API Group for which to import a new API\n   *                                                             version.\n   * @param accept\n   * @param body         Request Body\n   * @return Response from the API call\n   */\n  async importNewAPIVersionViaURL(\n    apiGroupId: string,\n    accept: Accept,\n    body: ImportApiVersionViaUrlRequest,\n    requestOptions?: RequestOptions\n  ): Promise<ApiResponse<ApiEntity>> {\n    const req = this.createRequest('POST');\n    const mapped = req.prepareArgs({\n      apiGroupId: [apiGroupId, string()],\n      accept: [accept, acceptSchema],\n      body: [body, importApiVersionViaUrlRequestSchema],\n    });\n    req.header('Accept', mapped.accept);\n    req.header(\n      'Content-Type',\n      'application/vnd.apimatic.apiGroupApiEntityUrlImportDto.v1+json'\n    );\n    req.json(mapped.body);\n    req.appendTemplatePath`/api-groups/${mapped.apiGroupId}/api-entities/import-via-url`;\n    return req.callAsJson(apiEntitySchema, requestOptions);\n  }\n\n  /**\n   * Replace an API version of an API Group, by uploading the API specification file that will replace\n   * the current version.\n   *\n   * You can also specify [API Metadata](https://docs.apimatic.io/manage-apis/apimatic-metadata) while\n   * importing the API version using this endpoint. When specifying Metadata, the uploaded file will be a\n   * zip file containing the API specification file and the `APIMATIC-META` json file.\n   *\n   * @param apiEntityId   The ID of the API Entity to replace.\n   * @param accept\n   * @param file          The API specification file.<br>The type of the specification file should be\n   *                                     any of the [supported formats](https://docs.apimatic.io/api-\n   *                                     transformer/overview-transformer#supported-input-formats).\n   * @return Response from the API call\n   */\n  async inplaceAPIImportViaFile(\n    apiEntityId: string,\n    accept: Accept2,\n    file: FileWrapper,\n    requestOptions?: RequestOptions\n  ): Promise<ApiResponse<void>> {\n    const req = this.createRequest('PUT');\n    const mapped = req.prepareArgs({\n      apiEntityId: [apiEntityId, string()],\n      accept: [accept, accept2Schema],\n    });\n    req.header('Accept', mapped.accept);\n    req.header('Content-Type', 'multipart/form-data');\n    req.formData({\n      file: file,\n    });\n    req.appendTemplatePath`/api-entities/${mapped.apiEntityId}/import-via-file`;\n    return req.call(requestOptions);\n  }\n\n  /**\n   * Replace an API version of an API Group, by providing the URL of the API specification file that will\n   * replace the current version.\n   *\n   * You can also specify [API Metadata](https://docs.apimatic.io/manage-apis/apimatic-metadata) while\n   * importing the API version using this endpoint. When specifying Metadata, the URL provided will be\n   * that of a zip file containing the API specification file and the `APIMATIC-META` json file.\n   *\n   * @param apiEntityId   The ID of the API Entity to replace.\n   * @param body          Request Body\n   * @return Response from the API call\n   */\n  async inplaceAPIImportViaURL(\n    apiEntityId: string,\n    body: InplaceImportApiViaUrlRequest,\n    requestOptions?: RequestOptions\n  ): Promise<ApiResponse<void>> {\n    const req = this.createRequest('PUT');\n    const mapped = req.prepareArgs({\n      apiEntityId: [apiEntityId, string()],\n      body: [body, inplaceImportApiViaUrlRequestSchema],\n    });\n    req.header(\n      'Content-Type',\n      'application/vnd.apimatic.apiEntityUrlImportDto.v1+json'\n    );\n    req.json(mapped.body);\n    req.appendTemplatePath`/api-entities/${mapped.apiEntityId}/import-via-url`;\n    return req.call(requestOptions);\n  }\n\n  /**\n   * Fetch an API Entity.\n   *\n   * @param apiEntityId   The ID of the API Entity to fetch.\n   * @return Response from the API call\n   */\n  async fetchAPIEntity(\n    apiEntityId: string,\n    requestOptions?: RequestOptions\n  ): Promise<ApiResponse<ApiEntity>> {\n    const req = this.createRequest('GET');\n    const mapped = req.prepareArgs({ apiEntityId: [apiEntityId, string()] });\n    req.appendTemplatePath`/api-entities/${mapped.apiEntityId}`;\n    return req.callAsJson(apiEntitySchema, requestOptions);\n  }\n\n  /**\n   * Download the API Specification file for a an API Version in any of the API Specification formats\n   * supported by APIMatic.\n   *\n   * @param apiEntityId   The ID of the API Entity to download.\n   * @param format        The format in which to download the API.<br>The format can be any of the\n   *                                       [supported formats](https://docs.apimatic.io/api-transformer/overview-\n   *                                       transformer#supported-input-formats).\n   * @return Response from the API call\n   */\n  async downloadAPISpecification(\n    apiEntityId: string,\n    format: ExportFormats,\n    requestOptions?: RequestOptions\n  ): Promise<ApiResponse<NodeJS.ReadableStream | Blob>> {\n    const req = this.createRequest('GET');\n    const mapped = req.prepareArgs({\n      apiEntityId: [apiEntityId, string()],\n      format: [format, exportFormatsSchema],\n    });\n    req.query('format', mapped.format);\n    req.appendTemplatePath`/api-entities/${mapped.apiEntityId}/api-description`;\n    return req.callAsStream(requestOptions);\n  }\n}\n","/**\n * Apimatic APILib\n *\n * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).\n */\n\nimport { object, Schema, string } from '../schema';\nimport { Platforms, platformsSchema } from './platforms';\n\nexport interface GenerateSdkViaUrlRequest {\n  /** The URL for the API specification file.<br><br>**Note:** This URL should be publicly accessible. */\n  url: string;\n  /** The structure contains platforms that APIMatic CodeGen can generate SDKs and Docs in. */\n  template: Platforms;\n}\n\nexport const generateSdkViaUrlRequestSchema: Schema<GenerateSdkViaUrlRequest> = object(\n  { url: ['url', string()], template: ['template', platformsSchema] }\n);\n","/**\n * Apimatic APILib\n *\n * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).\n */\n\nimport { boolean, object, Schema, string } from '../schema';\nimport { Platforms, platformsSchema } from './platforms';\n\n/** The Code Generation structure encapsulates all the  the details of an SDK generation performed by a user. */\nexport interface UserCodeGeneration {\n  /** Unique Code Generation Identifier */\n  id: string;\n  /** The structure contains platforms that APIMatic CodeGen can generate SDKs and Docs in. */\n  template: Platforms;\n  /** The generated SDK */\n  generatedFile: string;\n  /** Generation Date and Time */\n  generatedOn: string;\n  /** The md5 hash of the API Description */\n  hashCode: string;\n  /** Generation Source */\n  codeGenerationSource: string;\n  /** Generation Version */\n  codeGenVersion: string;\n  /** Generation Status */\n  success: boolean;\n  /** Unique User Identifier */\n  userId: string;\n  /** API Specification file in a supported format */\n  inputFile: string;\n}\n\nexport const userCodeGenerationSchema: Schema<UserCodeGeneration> = object({\n  id: ['id', string()],\n  template: ['template', platformsSchema],\n  generatedFile: ['generatedFile', string()],\n  generatedOn: ['generatedOn', string()],\n  hashCode: ['hashCode', string()],\n  codeGenerationSource: ['codeGenerationSource', string()],\n  codeGenVersion: ['codeGenVersion', string()],\n  success: ['success', boolean()],\n  userId: ['userId', string()],\n  inputFile: ['inputFile', string()],\n});\n","/**\n * Apimatic APILib\n *\n * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).\n */\n\nimport { ApiResponse, FileWrapper, RequestOptions } from '../core';\nimport {\n  GenerateSdkViaUrlRequest,\n  generateSdkViaUrlRequestSchema,\n} from '../models/generateSdkViaUrlRequest';\nimport { Platforms, platformsSchema } from '../models/platforms';\nimport {\n  UserCodeGeneration,\n  userCodeGenerationSchema,\n} from '../models/userCodeGeneration';\nimport { array, string } from '../schema';\nimport { BaseController } from './baseController';\n\nexport class CodeGenerationExternalApisController extends BaseController {\n  /**\n   * Generate an SDK for an API by by uploading the API specification file.\n   *\n   * This endpoint generates and then uploads the generated SDK to APIMatic's cloud storage. An ID for\n   * the generation performed is returned as part of the response.\n   *\n   * This endpoint does not import an API into APIMatic.\n   *\n   * @param file         The API specification file.<br>The type of the specification file should be\n   *                                    any of the [supported formats](https://docs.apimatic.io/api-\n   *                                    transformer/overview-transformer#supported-input-formats).\n   * @param template     The structure contains platforms that APIMatic CodeGen can generate SDKs and\n   *                                    Docs in.\n   * @return Response from the API call\n   */\n  async generateSDKViaFile(\n    file: FileWrapper,\n    template: Platforms,\n    requestOptions?: RequestOptions\n  ): Promise<ApiResponse<UserCodeGeneration>> {\n    const req = this.createRequest(\n      'POST',\n      '/code-generations/generate-via-file'\n    );\n    const mapped = req.prepareArgs({ template: [template, platformsSchema] });\n    req.header('Content-Type', 'multipart/form-data');\n    req.formData({\n      file: file,\n      template: mapped.template,\n    });\n    return req.callAsJson(userCodeGenerationSchema, requestOptions);\n  }\n\n  /**\n   * Generate an SDK for an API by providing the URL of the API specification file.\n   *\n   * This endpoint generates and then uploads the generated SDK to APIMatic's cloud storage. An ID for\n   * the generation performed is returned as part of the response.\n   *\n   * This endpoint does not import an API into APIMatic.\n   *\n   * @param body         Request Body\n   * @return Response from the API call\n   */\n  async generateSDKViaURL(\n    body: GenerateSdkViaUrlRequest,\n    requestOptions?: RequestOptions\n  ): Promise<ApiResponse<UserCodeGeneration>> {\n    const req = this.createRequest(\n      'POST',\n      '/code-generations/generate-via-url'\n    );\n    const mapped = req.prepareArgs({\n      body: [body, generateSdkViaUrlRequestSchema],\n    });\n    req.header('Content-Type', 'application/vnd.apimatic.userCodeGenerationDto.v1+json');\n    req.json(mapped.body);\n    return req.callAsJson(userCodeGenerationSchema, requestOptions);\n  }\n\n  /**\n   * Download the SDK generated via the Generate SDK endpoints.\n   *\n   * @param codegenId  The ID of code generation received in the response of the [Generate SDK Via\n   *                             File](https://www.apimatic.io/api-docs-\n   *                             preview/dashboard/60eea3b7a73395c3052d961b/v/3_0#/http/api-endpoints/code-generation-\n   *                             external-apis/generate-sdk-via-file) or [Generate SDK Via URL ](https://www.apimatic.\n   *                             io/api-docs-preview/dashboard/60eea3b7a73395c3052d961b/v/3_0#/http/api-endpoints/code-\n   *                             generation-external-apis/generate-sdk-via-url) calls.\n   * @return Response from the API call\n   */\n  async downloadSDK(\n    codegenId: string,\n    requestOptions?: RequestOptions\n  ): Promise<ApiResponse<NodeJS.ReadableStream | Blob>> {\n    const req = this.createRequest('GET');\n    const mapped = req.prepareArgs({ codegenId: [codegenId, string()] });\n    req.appendTemplatePath`/code-generations/${mapped.codegenId}/generated-sdk`;\n    return req.callAsStream(requestOptions);\n  }\n\n  /**\n   * Get a list of all SDK generations performed with external APIs via the Generate SDK endpoints.\n   *\n   * @return Response from the API call\n   */\n  async listAllCodeGenerations(\n    requestOptions?: RequestOptions\n  ): Promise<ApiResponse<UserCodeGeneration[]>> {\n    const req = this.createRequest('GET', '/code-generations');\n    return req.callAsJson(array(userCodeGenerationSchema), requestOptions);\n  }\n\n  /**\n   * Download the API Specification file used as input for a specific SDK generation performed via the\n   * Generate SDK endpoints.\n   *\n   * @param codegenId  The ID of the code generation to download the API specification for. The code\n   *                             generation ID is received in the response of the [Generate SDK Via File](https://www.\n   *                             apimatic.io/api-docs-preview/dashboard/60eea3b7a73395c3052d961b/v/3_0#/http/api-\n   *                             endpoints/code-generation-external-apis/generate-sdk-via-file) or [Generate SDK Via\n   *                             URL ](https://www.apimatic.io/api-docs-\n   *                             preview/dashboard/60eea3b7a73395c3052d961b/v/3_0#/http/api-endpoints/code-generation-\n   *                             external-apis/generate-sdk-via-url) calls\n   * @return Response from the API call\n   */\n  async downloadInputFile(\n    codegenId: string,\n    requestOptions?: RequestOptions\n  ): Promise<ApiResponse<NodeJS.ReadableStream | Blob>> {\n    const req = this.createRequest('GET');\n    const mapped = req.prepareArgs({ codegenId: [codegenId, string()] });\n    req.appendTemplatePath`/code-generations/${mapped.codegenId}/input-file`;\n    return req.callAsStream(requestOptions);\n  }\n\n  /**\n   * Get details on an SDK generation performed for an external API via the Generate SDK endpoints.\n   *\n   * @param codegenId  The ID of the code generation to fetch. The code generation ID is received in the\n   *                             response of the [Generate SDK Via File](https://www.apimatic.io/api-docs-\n   *                             preview/dashboard/60eea3b7a73395c3052d961b/v/3_0#/http/api-endpoints/code-generation-\n   *                             external-apis/generate-sdk-via-file) or [Generate SDK Via URL ](https://www.apimatic.\n   *                             io/api-docs-preview/dashboard/60eea3b7a73395c3052d961b/v/3_0#/http/api-endpoints/code-\n   *                             generation-external-apis/generate-sdk-via-url) calls.\n   * @return Response from the API call\n   */\n  async getACodeGeneration(\n    codegenId: string,\n    requestOptions?: RequestOptions\n  ): Promise<ApiResponse<UserCodeGeneration>> {\n    const req = this.createRequest('GET');\n    const mapped = req.prepareArgs({ codegenId: [codegenId, string()] });\n    req.appendTemplatePath`/code-generations/${mapped.codegenId}`;\n    return req.callAsJson(userCodeGenerationSchema, requestOptions);\n  }\n\n  /**\n   * Delete an SDK generation performed for an API via the Generate SDK endpoints.\n   *\n   * @param codegenId  The ID of the code generation to delete. The code generation ID is received in the\n   *                             response of the [Generate SDK Via File](https://www.apimatic.io/api-docs-\n   *                             preview/dashboard/60eea3b7a73395c3052d961b/v/3_0#/http/api-endpoints/code-generation-\n   *                             external-apis/generate-sdk-via-file) or [Generate SDK Via URL ](https://www.apimatic.\n   *                             io/api-docs-preview/dashboard/60eea3b7a73395c3052d961b/v/3_0#/http/api-endpoints/code-\n   *                             generation-external-apis/generate-sdk-via-url) calls.\n   * @return Response from the API call\n   */\n  async deleteCodeGeneration1(\n    codegenId: string,\n    requestOptions?: RequestOptions\n  ): Promise<ApiResponse<void>> {\n    const req = this.createRequest('DELETE');\n    const mapped = req.prepareArgs({ codegenId: [codegenId, string()] });\n    req.appendTemplatePath`/code-generations/${mapped.codegenId}`;\n    return req.call(requestOptions);\n  }\n}\n","/**\n * Apimatic APILib\n *\n * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).\n */\n\nimport { boolean, object, Schema, string } from '../schema';\nimport { Platforms, platformsSchema } from './platforms';\n\n/** The Code Generation structure encapsulates all the  the details of an SDK generation performed against an API Entity */\nexport interface APIEntityCodeGeneration {\n  /** Unique Code Generation Identifier */\n  id: string;\n  /** The structure contains platforms that APIMatic CodeGen can generate SDKs and Docs in. */\n  template: Platforms;\n  /** The generated SDK */\n  generatedFile: string;\n  /** Generation Date and Time */\n  generatedOn: string;\n  /** The md5 hash of the API Description */\n  hashCode: string;\n  /** Generation Source */\n  codeGenerationSource: string;\n  /** Generation Version */\n  codeGenVersion: string;\n  /** Generation Status */\n  success: boolean;\n  /** Unique API Entity Identifier */\n  apiEntityId: string;\n}\n\nexport const aPIEntityCodeGenerationSchema: Schema<APIEntityCodeGeneration> = object(\n  {\n    id: ['id', string()],\n    template: ['template', platformsSchema],\n    generatedFile: ['generatedFile', string()],\n    generatedOn: ['generatedOn', string()],\n    hashCode: ['hashCode', string()],\n    codeGenerationSource: ['codeGenerationSource', string()],\n    codeGenVersion: ['codeGenVersion', string()],\n    success: ['success', boolean()],\n    apiEntityId: ['apiEntityId', string()],\n  }\n);\n","/**\n * Apimatic APILib\n *\n * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).\n */\n\nimport { ApiResponse, RequestOptions } from '../core';\nimport {\n  APIEntityCodeGeneration,\n  aPIEntityCodeGenerationSchema,\n} from '../models/aPIEntityCodeGeneration';\nimport { Platforms, platformsSchema } from '../models/platforms';\nimport { array, string } from '../schema';\nimport { BaseController } from './baseController';\n\nexport class CodeGenerationImportedApisController extends BaseController {\n  /**\n   * Generate an SDK for an API Version.\n   *\n   * This endpoint generates and then uploads the generated SDK to APIMatic's cloud storage. An ID for\n   * the generation performed is returned as part of the response.\n   *\n   * @param apiEntityId   The ID of the API Entity to generate the SDK for.\n   * @param template      The structure contains platforms that APIMatic CodeGen can generate SDKs and\n   *                                   Docs in.\n   * @return Response from the API call\n   */\n  async generateSDK(\n    apiEntityId: string,\n    template: Platforms,\n    requestOptions?: RequestOptions\n  ): Promise<ApiResponse<APIEntityCodeGeneration>> {\n    const req = this.createRequest('POST');\n    const mapped = req.prepareArgs({\n      apiEntityId: [apiEntityId, string()],\n      template: [template, platformsSchema],\n    });\n    req.header('Content-Type', 'application/x-www-form-urlencoded');\n    req.form({\n      template: mapped.template,\n    });\n    req.appendTemplatePath`/api-entities/${mapped.apiEntityId}/code-generations/generate`;\n    return req.callAsJson(aPIEntityCodeGenerationSchema, requestOptions);\n  }\n\n  /**\n   * Download the SDK generated via the Generate SDK endpoint.\n   *\n   * @param apiEntityId   The ID of the API Entity for which the SDK was generated.\n   * @param codegenId     The ID of code generation received in the response of the [SDK generation\n   *                                call](https://www.apimatic.io/api-docs-\n   *                                preview/dashboard/60eea3b7a73395c3052d961b/v/3_0#/http/api-endpoints/code-\n   *                                generation-imported-apis/generate-sdk).\n   * @return Response from the API call\n   */\n  async downloadSDK(\n    apiEntityId: string,\n    codegenId: string,\n    requestOptions?: RequestOptions\n  ): Promise<ApiResponse<NodeJS.ReadableStream | Blob>> {\n    const req = this.createRequest('GET');\n    const mapped = req.prepareArgs({\n      apiEntityId: [apiEntityId, string()],\n      codegenId: [codegenId, string()],\n    });\n    req.appendTemplatePath`/api-entities/${mapped.apiEntityId}/code-generations/${mapped.codegenId}/generated-sdk`;\n    return req.callAsStream(requestOptions);\n  }\n\n  /**\n   * Get a list of all SDK generations done against an API Version via the Generate SDK endpoint.\n   *\n   * @param apiEntityId   The ID of the API Entity for which to list code generations.\n   * @return Response from the API call\n   */\n  async listAllCodeGenerations(\n    apiEntityId: string,\n    requestOptions?: RequestOptions\n  ): Promise<ApiResponse<APIEntityCodeGeneration[]>> {\n    const req = this.createRequest('GET');\n    const mapped = req.prepareArgs({ apiEntityId: [apiEntityId, string()] });\n    req.appendTemplatePath`/api-entities/${mapped.apiEntityId}/code-generations`;\n    return req.callAsJson(array(aPIEntityCodeGenerationSchema), requestOptions);\n  }\n\n  /**\n   * Get details on an SDK generation performed via the Generate SDK endpoint.\n   *\n   * @param apiEntityId   The ID of the API Entity to fetch the code generation for.\n   * @param codegenId     The ID of the code generation to fetch. The code generation ID is received in the\n   *                                response of the [SDK generation call](https://www.apimatic.io/api-docs-\n   *                                preview/dashboard/60eea3b7a73395c3052d961b/v/3_0#/http/api-endpoints/code-\n   *                                generation-imported-apis/generate-sdk).\n   * @return Response from the API call\n   */\n  async getACodeGeneration(\n    apiEntityId: string,\n    codegenId: string,\n    requestOptions?: RequestOptions\n  ): Promise<ApiResponse<APIEntityCodeGeneration>> {\n    const req = this.createRequest('GET');\n    const mapped = req.prepareArgs({\n      apiEntityId: [apiEntityId, string()],\n      codegenId: [codegenId, string()],\n    });\n    req.appendTemplatePath`/api-entities/${mapped.apiEntityId}/code-generations/${mapped.codegenId}`;\n    return req.callAsJson(aPIEntityCodeGenerationSchema, requestOptions);\n  }\n\n  /**\n   * Delete an SDK generation performed for an API Version via the Generate SDK endpoint.\n   *\n   * @param apiEntityId   The ID of the API Entity to delete the code generation for.\n   * @param codegenId     The ID of the code generation to delete. The code generation ID is received in the\n   *                                response of the [SDK generation call](https://www.apimatic.io/api-docs-\n   *                                preview/dashboard/60eea3b7a73395c3052d961b/v/3_0#/http/api-endpoints/code-\n   *                                generation-imported-apis/generate-sdk).\n   * @return Response from the API call\n   */\n  async deleteCodeGeneration(\n    apiEntityId: string,\n    codegenId: string,\n    requestOptions?: RequestOptions\n  ): Promise<ApiResponse<void>> {\n    const req = this.createRequest('DELETE');\n    const mapped = req.prepareArgs({\n      apiEntityId: [apiEntityId, string()],\n      codegenId: [codegenId, string()],\n    });\n    req.appendTemplatePath`/api-entities/${mapped.apiEntityId}/code-generations/${mapped.codegenId}`;\n    return req.call(requestOptions);\n  }\n}\n","/**\n * Apimatic APILib\n *\n * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).\n */\n\nimport { Schema, stringEnum } from '../schema';\n\n/**\n * Enum for Accept3\n */\nexport enum Accept3 {\n  EnumApplicationzip = 'application/zip',\n}\n\n/**\n * Schema for Accept3\n */\nexport const accept3Schema: Schema<Accept3> = stringEnum(Accept3);\n","/**\n * Apimatic APILib\n *\n * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).\n */\n\nimport { ApiResponse, FileWrapper, RequestOptions } from '../core';\nimport { Accept3, accept3Schema } from '../models/accept3';\nimport { string } from '../schema';\nimport { BaseController } from './baseController';\n\nexport class DocsPortalManagementController extends BaseController {\n  /**\n   * Publish artifacts for a Hosted Portal.\n   *\n   * This endpoint regenerates all the artifacts for a hosted portal and uploads them to APIMatic's cloud\n   * storage, from where the Portal fetches them. These artifacts include:\n   *\n   * 1. SDKs\n   * 2. Docs\n   * 3. API Specification files\n   *\n   * Call this endpoint to update your Hosted Portal after you update an API Entity via any of the Import\n   * API Endpoints.\n   *\n   * __**Note: If you have an embedded portal against the same API Entity, artifacts for that portal will\n   * get updated as well.**__\n   *\n   * @param apiEntityId   The ID of the API Entity to update the portal artifacts for.\n   * @return Response from the API call\n   */\n  async publishHostedPortal(\n    apiEntityId: string,\n    requestOptions?: RequestOptions\n  ): Promise<ApiResponse<void>> {\n    const req = this.createRequest('PUT');\n    const mapped = req.prepareArgs({ apiEntityId: [apiEntityId, string()] });\n    req.appendTemplatePath`/api-entities/${mapped.apiEntityId}/hosted-portal`;\n    return req.call(requestOptions);\n  }\n\n  /**\n   * Publish artifacts for an Embedded Portal and get the Portal Embed script.\n   *\n   * This endpoint regenerates all the artifacts for an embedded portal and uploads them to APIMatic's\n   * cloud storage, from where the Portal fetches them. These artifacts include:\n   *\n   * 1. SDKs\n   * 2. Docs\n   * 3. API Specification files\n   *\n   * Call this endpoint to update your Embedded Portal after you update an API Entity via any of the\n   * Import API Endpoints. This endpoint returns the Portal Embed script in the response.\n   *\n   * __**Note: If you have a hosted portal against the same API Entity, artifacts for that portal will\n   * get updated as well.**__\n   *\n   * @param apiEntityId   The ID of the API Entity to update the portal artifacts for.\n   * @return Response from the API call\n   */\n  async publishEmbeddedPortal(\n    apiEntityId: string,\n    requestOptions?: RequestOptions\n  ): Promise<ApiResponse<void>> {\n    const req = this.createRequest('PUT');\n    const mapped = req.prepareArgs({ apiEntityId: [apiEntityId, string()] });\n    req.appendTemplatePath`/api-entities/${mapped.apiEntityId}/embedded-portal`;\n    return req.call(requestOptions);\n  }\n\n  /**\n   * Generate an On-premise Documentation Portal for an API Entity. This endpoint generates all artifacts\n   * for the Portal and packages them together into a zip file along with the required HTML, CSS and JS\n   * files. The generated artifacts include:\n   *\n   * 1. SDKs\n   * 2. Docs\n   * 3. API Specification files\n   *\n   * The endpoint returns a zip file that contains a static Site and can be hosted on any Web Server.\n   *\n   * @param apiEntityId   The ID of the API Entity to generate the Portal for.\n   * @param accept        Example: application/zip\n   * @return Response from the API call\n   */\n  async generateOnPremPortalViaAPIEntity(\n    apiEntityId: string,\n    accept: Accept3,\n    requestOptions?: RequestOptions\n  ): Promise<ApiResponse<void>> {\n    const req = this.createRequest('GET');\n    const mapped = req.prepareArgs({\n      apiEntityId: [apiEntityId, string()],\n      accept: [accept, accept3Schema],\n    });\n    req.header('Accept', mapped.accept);\n    req.appendTemplatePath`/api-entities/${mapped.apiEntityId}/on-prem-portal`;\n    return req.call(requestOptions);\n  }\n\n  /**\n   * Generate an On-premise Documentation Portal by uploading a Portal Build Input. This endpoint\n   * generates all artifacts for the Portal and packages them together into a zip file along with the\n   * required HTML, CSS and JS files. The generated artifacts include:\n   *\n   * 1. SDKs\n   * 2. Docs\n   * 3. API Specification files\n   *\n   * The endpoint returns a zip file that contains a static Site and can be hosted on any Web Server.\n   *\n   * @param file        The input file to the Portal Generator. Must contain the build file.\n   * @return Response from the API call\n   */\n  async generateOnPremPortalViaBuildInput(\n    file: FileWrapper,\n    requestOptions?: RequestOptions\n  ): Promise<ApiResponse<NodeJS.ReadableStream | Blob>> {\n    const req = this.createRequest('POST', '/portal');\n    req.header('ContentType', 'multipart/form-data');\n    req.formData({\n      file: file,\n    });\n    return req.callAsStream(requestOptions);\n  }\n\n  /**\n   * Unpublish a Hosted or Embedded Portal published for an API Entity. Calling this endpoint deletes all\n   * the published artifacts for a Portal from APIMatic's cloud storage.\n   *\n   * In case of a Hosted Portal, to completely remove the Portal, this endpoint needs to be called\n   * against all API versions that the Portal hosts.\n   *\n   * In case of an Embedded Portal, to completely remove the Portal, the user needs to manually remove\n   * the Portal Embed script from the embedding site.\n   *\n   * @param apiEntityId   The ID of the API Entity to unpublish the Portal artifacts for.\n   * @return Response from the API call\n   */\n  async unpublishPortal(\n    apiEntityId: string,\n    requestOptions?: RequestOptions\n  ): Promise<ApiResponse<void>> {\n    const req = this.createRequest('DELETE');\n    const mapped = req.prepareArgs({ apiEntityId: [apiEntityId, string()] });\n    req.appendTemplatePath`/api-entities/${mapped.apiEntityId}/portal`;\n    return req.call(requestOptions);\n  }\n}\n","/**\n * Apimatic APILib\n *\n * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).\n */\n\nimport { Schema, stringEnum } from '../schema';\n\n/**\n * Enum for Id\n */\nexport enum Id {\n  Enum5dcd2b5893c3e31a206f30c4 = '5dcd2b5893c3e31a206f30c4',\n}\n\n/**\n * Schema for Id\n */\nexport const idSchema: Schema<Id> = stringEnum(Id);\n","/**\n * Apimatic APILib\n *\n * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).\n */\n\nimport { Schema, stringEnum } from '../schema';\n\n/**\n * Enum for Link\n */\nexport enum Link {\n  EnumHttpswwwnugetorgpackagesmyPackage111 = 'https://www.nuget.org/packages/myPackage/1.1.1',\n}\n\n/**\n * Schema for Link\n */\nexport const linkSchema: Schema<Link> = stringEnum(Link);\n","/**\n * Apimatic APILib\n *\n * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).\n */\n\nimport { Schema, stringEnum } from '../schema';\n\n/**\n * Enum for PackageRepositories\n */\nexport enum PackageRepositories {\n  Npm = 'Npm',\n  PyPI = 'PyPI',\n  RubyGems = 'RubyGems',\n}\n\n/**\n * Schema for PackageRepositories\n */\nexport const packageRepositoriesSchema: Schema<PackageRepositories> = stringEnum(PackageRepositories);\n","/**\n * Apimatic APILib\n *\n * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).\n */\n\nimport { object, optional, Schema, string, unknown } from '../schema';\nimport { Id, idSchema } from './id';\nimport { Link, linkSchema } from './link';\n\n/** This structure contains all details that goes into package deployment. */\nexport interface CSNETSTANDARDLIB {\n  /** Unique package identifier */\n  id?: Id;\n  /** Package Repository as per platform */\n  packageRepository: string;\n  /** Package Name */\n  packageName: string;\n  version: string;\n  /** Any additional platform specific deployment detail */\n  additionalDeploymentInformation?: unknown;\n  /** Link of deployed package */\n  link?: Link;\n}\n\nexport const cSNETSTANDARDLIBSchema: Schema<CSNETSTANDARDLIB> = object({\n  id: ['id', optional(idSchema)],\n  packageRepository: ['packageRepository', string()],\n  packageName: ['packageName', string()],\n  version: ['version', string()],\n  additionalDeploymentInformation: [\n    'additionalDeploymentInformation',\n    unknown(),\n  ],\n  link: ['link', optional(linkSchema)],\n});\n","/**\n * Apimatic APILib\n *\n * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).\n */\n\nimport { lazy, object, Schema } from '../schema';\nimport { CSNETSTANDARDLIB, cSNETSTANDARDLIBSchema } from './cSNETSTANDARDLIB';\n\n/** This structure encapsulates all package deployment details. */\nexport interface TemplatesPackageDeploymentInformation {\n  /** This structure contains all details that goes into package deployment. */\n  cSNETSTANDARDLIB: CSNETSTANDARDLIB;\n}\n\nexport const templatesPackageDeploymentInformationSchema: Schema<TemplatesPackageDeploymentInformation> = object(\n  {\n    cSNETSTANDARDLIB: [\n      'CS_NET_STANDARD_LIB',\n      lazy(() => cSNETSTANDARDLIBSchema),\n    ],\n  }\n);\n","/**\n * Apimatic APILib\n *\n * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).\n */\n\nimport { lazy, object, Schema, string } from '../schema';\nimport {\n  TemplatesPackageDeploymentInformation,\n  templatesPackageDeploymentInformationSchema,\n} from './templatesPackageDeploymentInformation';\n\n/** The structure contains Package Deployment Information along with Id. */\nexport interface PackageDeploymentInformation {\n  /** Package Deployment Identifier */\n  id: string;\n  /** This structure encapsulates all package deployment details. */\n  templatesPackageDeploymentInformation: TemplatesPackageDeploymentInformation;\n}\n\nexport const packageDeploymentInformationSchema: Schema<PackageDeploymentInformation> = object(\n  {\n    id: ['id', string()],\n    templatesPackageDeploymentInformation: [\n      'templatesPackageDeploymentInformation',\n      lazy(() => templatesPackageDeploymentInformationSchema),\n    ],\n  }\n);\n","/**\n * Apimatic APILib\n *\n * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).\n */\n\nimport { object, Schema, string } from '../schema';\n\nexport interface AuthorIdentifiers {\n  email: string;\n  userName: string;\n}\n\nexport const authorIdentifiersSchema: Schema<AuthorIdentifiers> = object({\n  email: ['Email', string()],\n  userName: ['UserName', string()],\n});\n","/**\n * Apimatic APILib\n *\n * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).\n */\n\nimport { lazy, object, Schema, string, unknown } from '../schema';\nimport {\n  AuthorIdentifiers,\n  authorIdentifiersSchema,\n} from './authorIdentifiers';\n\nexport interface PublishedPackage {\n  id: string;\n  createdOn: string;\n  apiEntityId: string;\n  packageRepository: string;\n  template: string;\n  packageName: string;\n  version: string;\n  additionalDeploymentInformation?: unknown;\n  authorIdentifiers: AuthorIdentifiers;\n  link: string;\n}\n\nexport const publishedPackageSchema: Schema<PublishedPackage> = object({\n  id: ['id', string()],\n  createdOn: ['createdOn', string()],\n  apiEntityId: ['apiEntityId', string()],\n  packageRepository: ['packageRepository', string()],\n  template: ['template', string()],\n  packageName: ['packageName', string()],\n  version: ['version', string()],\n  additionalDeploymentInformation: [\n    'additionalDeploymentInformation',\n    unknown(),\n  ],\n  authorIdentifiers: ['authorIdentifiers', lazy(() => authorIdentifiersSchema)],\n  link: ['link', string()],\n});\n","/**\n * Apimatic APILib\n *\n * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).\n */\n\nimport { Schema, stringEnum } from '../schema';\n\n/**\n * Enum for ImplementationType\n */\nexport enum ImplementationType {\n  Structure = 'Structure',\n  Enumeration = 'Enumeration',\n  Exception = 'Exception',\n}\n\n/**\n * Schema for ImplementationType\n */\nexport const implementationTypeSchema: Schema<ImplementationType> = stringEnum(ImplementationType);\n","/**\n * Apimatic APILib\n *\n * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).\n */\n\nimport { object, Schema, string, unknown } from '../schema';\nimport {\n  PackageRepositories,\n  packageRepositoriesSchema,\n} from './packageRepositories';\nimport { Platforms, platformsSchema } from './platforms';\n\nexport interface PublishPackageInput {\n  packageRepository: PackageRepositories;\n  /** The structure contains platforms that APIMatic CodeGen can generate SDKs and Docs in. */\n  template: Platforms;\n  packageName: string;\n  version: string;\n  additionalDeploymentInformation?: unknown;\n}\n\nexport const publishPackageInputSchema: Schema<PublishPackageInput> = object({\n  packageRepository: ['packageRepository', packageRepositoriesSchema],\n  template: ['template', platformsSchema],\n  packageName: ['packageName', string()],\n  version: ['version', string()],\n  additionalDeploymentInformation: [\n    'additionalDeploymentInformation',\n    unknown(),\n  ],\n});\n","/**\n * Apimatic APILib\n *\n * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).\n */\n\nimport { lazy, object, Schema } from '../schema';\nimport { CSNETSTANDARDLIB, cSNETSTANDARDLIBSchema } from './cSNETSTANDARDLIB';\n\n/** This structure helps update package deployment details. */\nexport interface UpdateTemplatesPackageDeploymentInformation {\n  /** This structure contains all details that goes into package deployment. */\n  cSNETSTANDARDLIB: CSNETSTANDARDLIB;\n}\n\nexport const updateTemplatesPackageDeploymentInformationSchema: Schema<UpdateTemplatesPackageDeploymentInformation> = object(\n  {\n    cSNETSTANDARDLIB: [\n      'CS_NET_STANDARD_LIB',\n      lazy(() => cSNETSTANDARDLIBSchema),\n    ],\n  }\n);\n","/**\n * Apimatic APILib\n *\n * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).\n */\n\nimport { lazy, object, Schema } from '../schema';\nimport {\n  UpdateTemplatesPackageDeploymentInformation,\n  updateTemplatesPackageDeploymentInformationSchema,\n} from './updateTemplatesPackageDeploymentInformation';\n\n/** This structure is used to update package deployment details. */\nexport interface UpdatePackageDeploymentInformation {\n  /** This structure helps update package deployment details. */\n  templatesPackageDeploymentInformation: UpdateTemplatesPackageDeploymentInformation;\n}\n\nexport const updatePackageDeploymentInformationSchema: Schema<UpdatePackageDeploymentInformation> = object(\n  {\n    templatesPackageDeploymentInformation: [\n      'templatesPackageDeploymentInformation',\n      lazy(() => updateTemplatesPackageDeploymentInformationSchema),\n    ],\n  }\n);\n","/**\n * Apimatic APILib\n *\n * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).\n */\n\nimport { ApiResponse, RequestOptions } from '../core';\nimport {\n  PackageDeploymentInformation,\n  packageDeploymentInformationSchema,\n} from '../models/packageDeploymentInformation';\nimport {\n  PublishedPackage,\n  publishedPackageSchema,\n} from '../models/publishedPackage';\nimport {\n  PublishPackageInput,\n  publishPackageInputSchema,\n} from '../models/publishPackageInput';\nimport {\n  UpdatePackageDeploymentInformation,\n  updatePackageDeploymentInformationSchema,\n} from '../models/updatePackageDeploymentInformation';\nimport { array, string } from '../schema';\nimport { BaseController } from './baseController';\n\nexport class PackageDeploymentController extends BaseController {\n  /**\n   * Update  Package Deployment Information for an API Entity. To find out more on how to publish a\n   * package visit: [Adding Packages to Portal](https://docs.apimatic.io/developer-experience-\n   * portal/adding%20packages%20to%20portal/)\n   *\n   * To find out more about publishing packages visit: [Publish Packages](https://docs.apimatic.\n   * io/developer-experience-portal/adding%20packages%20to%20portal/)\n   *\n   * @param apiEntityId   Unique API Entity Identifier\n   * @param body          Package Deployment Information to be updated.\n   *                                                                   This comprises of the Platform Template, the\n   *                                                                   Repository Name and Version.\n   * @return Response from the API call\n   */\n  async updatePackageDeploymentInformation(\n    apiEntityId: string,\n    body: UpdatePackageDeploymentInformation,\n    requestOptions?: RequestOptions\n  ): Promise<ApiResponse<void>> {\n    const req = this.createRequest('PUT');\n    const mapped = req.prepareArgs({\n      apiEntityId: [apiEntityId, string()],\n      body: [body, updatePackageDeploymentInformationSchema],\n    });\n    req.header('Content-Type', 'application/json');\n    req.json(mapped.body);\n    req.appendTemplatePath`/api-entities/${mapped.apiEntityId}/docs/package-deployment-information`;\n    return req.call(requestOptions);\n  }\n\n  /**\n   * Query Package deployment details added for an API Entity.\n   * To find out more about adding packages to portal: [Adding Packages to Portal](https://docs.apimatic.\n   * io/developer-experience-portal/adding%20packages%20to%20portal/)\n   *\n   * @param apiEntityId   Unique API Entity identifier\n   * @return Response from the API call\n   */\n  async packageDeploymentInformation(\n    apiEntityId: string,\n    requestOptions?: RequestOptions\n  ): Promise<ApiResponse<PackageDeploymentInformation>> {\n    const req = this.createRequest('GET');\n    req.baseUrl('default');\n    const mapped = req.prepareArgs({ apiEntityId: [apiEntityId, string()] });\n    req.appendTemplatePath`/api-entities/${mapped.apiEntityId}/docs/package-deployment-information`;\n    return req.callAsJson(packageDeploymentInformationSchema, requestOptions);\n  }\n\n  /**\n   * Returns logs for all packages published for the API.\n   *\n   * @param apiEntityId   Unique API Identifier\n   * @return Response from the API call\n   */\n  async getPublishedPackagesForAPI(\n    apiEntityId: string,\n    requestOptions?: RequestOptions\n  ): Promise<ApiResponse<PublishedPackage[]>> {\n    const req = this.createRequest('GET');\n    const mapped = req.prepareArgs({ apiEntityId: [apiEntityId, string()] });\n    req.appendTemplatePath`/api-entities/${mapped.apiEntityId}/published-packages`;\n    return req.callAsJson(array(publishedPackageSchema), requestOptions);\n  }\n\n  /**\n   * Publish a new package for API by specifying package name and version number.\n   *\n   * To publish packages using this API, you will first need to add package repository credentials to\n   * your APIMatic account.\n   * Check out the [docs](https://docs.apimatic.io/advanced/publishing-a-package/) for a guide on adding\n   * package repository credentials\n   *\n   * @param apiEntityId   Unique API Identifier\n   * @param body\n   * @return Response from the API call\n   */\n  async publishAPackageForAPI(\n    apiEntityId: string,\n    body: PublishPackageInput,\n    requestOptions?: RequestOptions\n  ): Promise<ApiResponse<PublishedPackage>> {\n    const req = this.createRequest('POST');\n    const mapped = req.prepareArgs({\n      apiEntityId: [apiEntityId, string()],\n      body: [body, publishPackageInputSchema],\n    });\n    req.header('Content-Type', 'application/json');\n    req.json(mapped.body);\n    req.appendTemplatePath`/api-entities/${mapped.apiEntityId}/published-packages/`;\n    return req.callAsJson(publishedPackageSchema, requestOptions);\n  }\n\n  /**\n   * Pull details for a certain published package by specifying Published Package Id.\n   *\n   * @param apiEntityId          Unique API Identifier\n   * @param publishedPackageId   Unique Published Package Identifier\n   * @return Response from the API call\n   */\n  async getAPublishedPackage(\n    apiEntityId: string,\n    publishedPackageId: string,\n    requestOptions?: RequestOptions\n  ): Promise<ApiResponse<PublishedPackage>> {\n    const req = this.createRequest('GET');\n    req.baseUrl('default');\n    const mapped = req.prepareArgs({\n      apiEntityId: [apiEntityId, string()],\n      publishedPackageId: [publishedPackageId, string()],\n    });\n    req.appendTemplatePath`/api/api-entities/${mapped.apiEntityId}/published-packages/${mapped.publishedPackageId}`;\n    return req.callAsJson(publishedPackageSchema, requestOptions);\n  }\n}\n","/**\n * Apimatic APILib\n *\n * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).\n */\n\nimport { boolean, lazy, object, Schema, string } from '../schema';\nimport {\n  ApiValidationSummary,\n  apiValidationSummarySchema,\n} from './apiValidationSummary';\n\n/** Transformation structure encapsulates all the details of a Transformation. */\nexport interface Transformation {\n  /** Unique Transformation Identifier */\n  id: string;\n  /** Transformation Date and Time */\n  transformedOn: string;\n  /** Unique User Identifier */\n  userId: string;\n  /** API Specification file to be transformed */\n  inputtedFile: string;\n  /** API Specification file transformed to desired format */\n  generatedFile: string;\n  /** Desired Specification format */\n  exportFormat: string;\n  /** Source of Transformation */\n  transformationSource: string;\n  /** Via File or URL */\n  transformationInput: string;\n  /** CodeGen Engine Version */\n  codeGenVersion: string;\n  /** Successful Transformation Flag */\n  success: boolean;\n  importSummary: ApiValidationSummary;\n  apiValidationSummary: ApiValidationSummary;\n}\n\nexport const transformationSchema: Schema<Transformation> = object({\n  id: ['id', string()],\n  transformedOn: ['transformedOn', string()],\n  userId: ['userId', string()],\n  inputtedFile: ['inputtedFile', string()],\n  generatedFile: ['generatedFile', string()],\n  exportFormat: ['exportFormat', string()],\n  transformationSource: ['transformationSource', string()],\n  transformationInput: ['transformationInput', string()],\n  codeGenVersion: ['codeGenVersion', string()],\n  success: ['success', boolean()],\n  importSummary: ['importSummary', lazy(() => apiValidationSummarySchema)],\n  apiValidationSummary: [\n    'apiValidationSummary',\n    lazy(() => apiValidationSummarySchema),\n  ],\n});\n","/**\n * Apimatic APILib\n *\n * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).\n */\n\nimport { object, Schema, string } from '../schema';\nimport { ExportFormats, exportFormatsSchema } from './exportFormats';\n\n/** This structure puts together the URL of the file to be transformed, along with the desired export format. */\nexport interface TransformViaUrlRequest {\n  /** The URL for the API specification file.<br><br>**Note:** This URL should be publicly accessible. */\n  url: string;\n  /** The structure contains API specification formats that Transformer can convert to. */\n  exportFormat: ExportFormats;\n}\n\nexport const transformViaUrlRequestSchema: Schema<TransformViaUrlRequest> = object(\n  {\n    url: ['url', string()],\n    exportFormat: ['export_format', exportFormatsSchema],\n  }\n);\n","/**\n * Apimatic APILib\n *\n * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).\n */\n\nimport { ApiResponse, FileWrapper, RequestOptions } from '../core';\nimport { ExportFormats, exportFormatsSchema } from '../models/exportFormats';\nimport { Transformation, transformationSchema } from '../models/transformation';\nimport {\n  TransformViaUrlRequest,\n  transformViaUrlRequestSchema,\n} from '../models/transformViaUrlRequest';\nimport { array, string } from '../schema';\nimport { BaseController } from './baseController';\n\nexport class TransformationController extends BaseController {\n  /**\n   * Transform an API into any of the supported API specification formats by uploading the API\n   * specification file.\n   *\n   * This endpoint transforms and then uploads the transformed API specification to APIMatic's cloud\n   * storage. An ID for the transformation performed is returned as part of the response.\n   *\n   * @param file          The API specification file.<br>The type of the specification file should be\n   *                                       any of the [supported formats](https://docs.apimatic.io/api-\n   *                                       transformer/overview-transformer#supported-input-formats).\n   * @param exportFormat  The structure contains API specification formats that Transformer can\n   *                                       convert to.\n   * @return Response from the API call\n   */\n  async transformViaFile(\n    file: FileWrapper,\n    exportFormat: ExportFormats,\n    requestOptions?: RequestOptions\n  ): Promise<ApiResponse<Transformation>> {\n    const req = this.createRequest(\n      'POST',\n      '/transformations/transform-via-file'\n    );\n    const mapped = req.prepareArgs({\n      exportFormat: [exportFormat, exportFormatsSchema],\n    });\n    req.header('ContentType', 'multipart/form-data');\n    req.formData({\n      file: file,\n      export_format: mapped.exportFormat,\n    });\n    return req.callAsJson(transformationSchema, requestOptions);\n  }\n\n  /**\n   * Transform an API into any of the supported API specification formats by providing the URL of the API\n   * specification file.\n   *\n   * This endpoint transforms and then uploads the transformed API specification to APIMatic's cloud\n   * storage. An ID for the transformation performed is returned as part of the response.\n   *\n   * @param body         Request Body\n   * @return Response from the API call\n   */\n  async transformViaURL(\n    body: TransformViaUrlRequest,\n    requestOptions?: RequestOptions\n  ): Promise<ApiResponse<Transformation>> {\n    const req = this.createRequest(\n      'POST',\n      '/transformations/transform-via-url'\n    );\n    const mapped = req.prepareArgs({\n      body: [body, transformViaUrlRequestSchema],\n    });\n    req.header(\n      'Content-Type',\n      'application/vnd.apimatic.urlTransformDto.v1+json'\n    );\n    req.json(mapped.body);\n    return req.callAsJson(transformationSchema, requestOptions);\n  }\n\n  /**\n   * Download the transformed API specification file transformed via the Transformation endpoints.\n   *\n   * @param transformationId  The ID of transformation received in the response of the [Transform Via File\n   *                                    ](https://www.apimatic.io/api-docs-\n   *                                    preview/dashboard/60eea3b7a73395c3052d961b/v/3_0#/http/api-\n   *                                    endpoints/transformation/transform-via-file) or [Transform Via URL  ](https:\n   *                                    //www.apimatic.io/api-docs-\n   *                                    preview/dashboard/60eea3b7a73395c3052d961b/v/3_0#/http/api-\n   *                                    endpoints/transformation/transform-via-url) calls.\n   * @return Response from the API call\n   */\n  async downloadTransformedFile(\n    transformationId: string,\n    requestOptions?: RequestOptions\n  ): Promise<ApiResponse<NodeJS.ReadableStream | Blob>> {\n    const req = this.createRequest('GET');\n    const mapped = req.prepareArgs({\n      transformationId: [transformationId, string()],\n    });\n    req.appendTemplatePath`/transformations/${mapped.transformationId}/converted-file`;\n    return req.callAsStream(requestOptions);\n  }\n\n  /**\n   * Download the API Specification file used as input for a particular Transformation performed via the\n   * Transformation endpoints.\n   *\n   * @param transformationId  The ID of the transformation to download the API specification for. The\n   *                                    transformation ID is received in the response of the [Transform Via File\n   *                                    ](https://www.apimatic.io/api-docs-\n   *                                    preview/dashboard/60eea3b7a73395c3052d961b/v/3_0#/http/api-\n   *                                    endpoints/transformation/transform-via-file) or [Transform Via URL](https://www.\n   *                                    apimatic.io/api-docs-preview/dashboard/60eea3b7a73395c3052d961b/v/3_0#/http/api-\n   *                                    endpoints/transformation/transform-via-url) calls.\n   * @return Response from the API call\n   */\n  async downloadInputFile(\n    transformationId: string,\n    requestOptions?: RequestOptions\n  ): Promise<ApiResponse<NodeJS.ReadableStream | Blob>> {\n    const req = this.createRequest('GET');\n    const mapped = req.prepareArgs({\n      transformationId: [transformationId, string()],\n    });\n    req.appendTemplatePath`/transformations/${mapped.transformationId}/input-file`;\n    return req.callAsStream(requestOptions);\n  }\n\n  /**\n   * Get a list of all API transformations performed.\n   *\n   * @return Response from the API call\n   */\n  async listAllTransformations(\n    requestOptions?: RequestOptions\n  ): Promise<ApiResponse<Transformation[]>> {\n    const req = this.createRequest('GET', '/transformations');\n    return req.callAsJson(array(transformationSchema), requestOptions);\n  }\n\n  /**\n   * Get details on a particular Transformation performed via the Transformation endpoints.\n   *\n   * @param transformationId  The ID of the transformation to fetch. The transformation ID is received in\n   *                                    the response of the [Transform Via File ](https://www.apimatic.io/api-docs-\n   *                                    preview/dashboard/60eea3b7a73395c3052d961b/v/3_0#/http/api-\n   *                                    endpoints/transformation/transform-via-file) or [Transform Via URL  ](https:\n   *                                    //www.apimatic.io/api-docs-\n   *                                    preview/dashboard/60eea3b7a73395c3052d961b/v/3_0#/http/api-\n   *                                    endpoints/transformation/transform-via-url) calls.\n   * @return Response from the API call\n   */\n  async getATransformation(\n    transformationId: string,\n    requestOptions?: RequestOptions\n  ): Promise<ApiResponse<Transformation>> {\n    const req = this.createRequest('GET');\n    const mapped = req.prepareArgs({\n      transformationId: [transformationId, string()],\n    });\n    req.appendTemplatePath`/transformations/${mapped.transformationId}`;\n    return req.callAsJson(transformationSchema, requestOptions);\n  }\n\n  /**\n   * Delete a particular Transformation performed for an API via the Transformation endpoints.\n   *\n   * @param transformationId  The ID of the transformation to delete. The transformation ID is received in\n   *                                    the response of the [Transform Via File ](https://www.apimatic.io/api-docs-\n   *                                    preview/dashboard/60eea3b7a73395c3052d961b/v/3_0#/http/api-\n   *                                    endpoints/transformation/transform-via-file) or [Transform Via URL](https://www.\n   *                                    apimatic.io/api-docs-preview/dashboard/60eea3b7a73395c3052d961b/v/3_0#/http/api-\n   *                                    endpoints/transformation/transform-via-url) calls.\n   * @return Response from the API call\n   */\n  async deleteTransformation(\n    transformationId: string,\n    requestOptions?: RequestOptions\n  ): Promise<ApiResponse<void>> {\n    const req = this.createRequest('DELETE');\n    const mapped = req.prepareArgs({\n      transformationId: [transformationId, string()],\n    });\n    req.appendTemplatePath`/transformations/${mapped.transformationId}`;\n    return req.call(requestOptions);\n  }\n}\n","/**\n * Apimatic APILib\n *\n * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).\n */\n\nimport { Schema, stringEnum } from '../schema';\n\n/**\n * Enum for ContentType\n */\nexport enum ContentType {\n  EnumMultipartformdata = 'multipart/form-data',\n}\n\n/**\n * Schema for ContentType\n */\nexport const contentTypeSchema: Schema<ContentType> = stringEnum(ContentType);\n"],"names":["runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","generator","create","Generator","context","Context","_invoke","state","method","arg","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","globalThis","Function","Environment","DEFAULT_CONFIGURATION","timeout","environment","Production","authorization","XmlSerialization","xmlSerialize","_rootName","_value","xmlDeserialize","_xmlString","Client","config","baseUrlProvider","authProvider","httpClient","addons","xmlSerializer","requestBuilderFactory","client","_config","_requestBuilderFactory","server","getBaseUri","_this","requiresAuth","request","options","mergeHeaders","headers","passThroughInterceptor","HttpClient","clientConfigOverrides","unstable_httpClientOptions","withErrorHandlers","withUserAgent","withAuthenticationByDefault","createRequestBuilderFactory","requestOptions","executeRequest","ApiError","tap","getRequestBuilderFactory","withConfiguration","callback","requestBuilder","c","rb","defaultToError","header","authenticate","apiValidationSummarySchema","success","boolean","errors","array","string","warnings","messages","BaseController","createRequest","APIValidationExternalApisController","validateAPIViaFile","file","req","baseUrl","formData","callAsJson","validateAPIViaURL","descriptionUrl","mapped","prepareArgs","query","docsValidationSummarySchema","APIValidationImportedApisController","validateAPI","apiEntityId","appendTemplatePath","validateAPIForDocs","Accept","acceptSchema","stringEnum","Accept2","ExportFormats","accept2Schema","authScopeSchema","id","description","authenticationSchema","authType","scopes","lazy","parameters","authScopes","authGrantTypes","paramFormats","unknown","codeGenSettingsSchema","isAsync","useHttpMethodPrefix","useModelPrefix","useEnumPrefix","useConstructorsForConfig","useCommonSdkLibrary","generateInterfaces","generateAppveyorConfig","generateCircleConfig","generateJenkinsConfig","generateTravisConfig","androidUseAppManifest","iosUseAppInfoPlist","iosGenerateCoreData","runscopeEnabled","collapseParamsToArray","preserveParameterOrder","appendContentHeaders","modelSerializationIsJSON","nullify404","validateRequiredParameters","enableAdditionalModelProperties","javaUsePropertiesConfig","useControllerPrefix","useExceptionPrefix","parameterArrayFormat","objCHttpClient","cSharpHttpClient","androidHttpClient","nodeHttpClient","phpHttpClient","bodySerialization","number","arraySerialization","enableLogging","enableHttpCache","retries","retryInterval","generateAdvancedDocs","storeTimezoneInformation","enablePhpComposerVersionString","securityProtocols","underscoreNumbers","useSingletonPattern","disableLinting","allowSkippingSSLCertVerification","applyCustomizations","doNotSplitWords","sortResources","enableGlobalUserAgent","endpointsGroupSchema","importValidationSummarySchema","metaDataSchema","importValidationSummary","apiValidationSummary","docsValidationSummary","serverSchema","url","environmentSchema","servers","attributesSchema","parameterSchema","optional","constant","isArray","isStream","isAttribute","isMap","attributes","nullable","defaultValue","paramFormat","serverConfigurationSchema","defaultEnvironment","defaultServer","environments","testGenSettingsSchema","precisionDelta","testTimeout","configuration","apiEntitySchema","encryptedId","apiKey","apiGroupId","imageUri","creationDate","mPublic","version","additionalHeaders","authentication","codeGenSettings","testGenSettings","serverConfiguration","endpointsGroup","metaData","Platforms","exportFormatsSchema","importApiVersionViaUrlRequestSchema","versionOverride","importApiViaUrlRequestSchema","inplaceImportApiViaUrlRequestSchema","ApisManagementController","importAPIViaFile","importAPIViaURL","body","json","importNewAPIVersionViaFile","accept","version_override","importNewAPIVersionViaURL","inplaceAPIImportViaFile","inplaceAPIImportViaURL","fetchAPIEntity","downloadAPISpecification","format","callAsStream","platformsSchema","generateSdkViaUrlRequestSchema","template","userCodeGenerationSchema","generatedFile","generatedOn","hashCode","codeGenerationSource","codeGenVersion","userId","inputFile","CodeGenerationExternalApisController","generateSDKViaFile","generateSDKViaURL","downloadSDK","codegenId","listAllCodeGenerations","downloadInputFile","getACodeGeneration","deleteCodeGeneration1","aPIEntityCodeGenerationSchema","CodeGenerationImportedApisController","generateSDK","form","deleteCodeGeneration","Accept3","accept3Schema","DocsPortalManagementController","publishHostedPortal","publishEmbeddedPortal","generateOnPremPortalViaAPIEntity","generateOnPremPortalViaBuildInput","unpublishPortal","Id","idSchema","Link","PackageRepositories","linkSchema","cSNETSTANDARDLIBSchema","packageRepository","packageName","additionalDeploymentInformation","link","templatesPackageDeploymentInformationSchema","cSNETSTANDARDLIB","packageDeploymentInformationSchema","templatesPackageDeploymentInformation","authorIdentifiersSchema","email","userName","publishedPackageSchema","createdOn","authorIdentifiers","ImplementationType","packageRepositoriesSchema","publishPackageInputSchema","updateTemplatesPackageDeploymentInformationSchema","updatePackageDeploymentInformationSchema","PackageDeploymentController","updatePackageDeploymentInformation","packageDeploymentInformation","getPublishedPackagesForAPI","publishAPackageForAPI","getAPublishedPackage","publishedPackageId","transformationSchema","transformedOn","inputtedFile","exportFormat","transformationSource","transformationInput","importSummary","transformViaUrlRequestSchema","TransformationController","transformViaFile","export_format","transformViaURL","downloadTransformedFile","transformationId","listAllTransformations","getATransformation","deleteTransformation","ContentType"],"mappings":"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"}