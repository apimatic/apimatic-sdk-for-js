/**
 * Apimatic APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */
/// <reference types="node" />
import { ApiResponse, FileWrapper, RequestOptions } from '../core';
import { ContentType } from '../models/contentType';
import { ExportFormats } from '../models/exportFormats';
import { Transformation } from '../models/transformation';
import { TransformViaUrlRequest } from '../models/transformViaUrlRequest';
import { BaseController } from './baseController';
export declare class TransformationController extends BaseController {
    /**
     * Transform an API into any of the supported API specification formats by uploading the API
     * specification file.
     *
     * This endpoint transforms and then uploads the transformed API specification to APIMatic's cloud
     * storage. An ID for the transformation performed is returned as part of the response.
     *
     * @param contentType
     * @param file          The API specification file.<br>The type of the specification file should be
     *                                       any of the [supported formats](https://docs.apimatic.io/api-
     *                                       transformer/overview-transformer#supported-input-formats).
     * @param exportFormat  The structure contains API specification formats that Transformer can
     *                                       convert to.
     * @return Response from the API call
     */
    transformViaFile(contentType: ContentType, file: FileWrapper, exportFormat: ExportFormats, requestOptions?: RequestOptions): Promise<ApiResponse<Transformation>>;
    /**
     * Transform an API into any of the supported API specification formats by providing the URL of the API
     * specification file.
     *
     * This endpoint transforms and then uploads the transformed API specification to APIMatic's cloud
     * storage. An ID for the transformation performed is returned as part of the response.
     *
     * @param body         Request Body
     * @return Response from the API call
     */
    transformViaURL(body: TransformViaUrlRequest, requestOptions?: RequestOptions): Promise<ApiResponse<Transformation>>;
    /**
     * Download the transformed API specification file transformed via the Transformation endpoints.
     *
     * @param transformationId  The ID of transformation received in the response of the [Transform Via File
     *                                    ](https://www.apimatic.io/api-docs-
     *                                    preview/dashboard/60eea3b7a73395c3052d961b/v/3_0#/http/api-
     *                                    endpoints/transformation/transform-via-file) or [Transform Via URL  ](https:
     *                                    //www.apimatic.io/api-docs-
     *                                    preview/dashboard/60eea3b7a73395c3052d961b/v/3_0#/http/api-
     *                                    endpoints/transformation/transform-via-url) calls.
     * @return Response from the API call
     */
    downloadTransformedFile(transformationId: string, requestOptions?: RequestOptions): Promise<ApiResponse<NodeJS.ReadableStream | Blob>>;
    /**
     * Download the API Specification file used as input for a particular Transformation performed via the
     * Transformation endpoints.
     *
     * @param transformationId  The ID of the transformation to download the API specification for. The
     *                                    transformation ID is received in the response of the [Transform Via File
     *                                    ](https://www.apimatic.io/api-docs-
     *                                    preview/dashboard/60eea3b7a73395c3052d961b/v/3_0#/http/api-
     *                                    endpoints/transformation/transform-via-file) or [Transform Via URL](https://www.
     *                                    apimatic.io/api-docs-preview/dashboard/60eea3b7a73395c3052d961b/v/3_0#/http/api-
     *                                    endpoints/transformation/transform-via-url) calls.
     * @return Response from the API call
     */
    downloadInputFile(transformationId: string, requestOptions?: RequestOptions): Promise<ApiResponse<NodeJS.ReadableStream | Blob>>;
    /**
     * Get a list of all API transformations performed.
     *
     * @return Response from the API call
     */
    listAllTransformations(requestOptions?: RequestOptions): Promise<ApiResponse<Transformation[]>>;
    /**
     * Get details on a particular Transformation performed via the Transformation endpoints.
     *
     * @param transformationId  The ID of the transformation to fetch. The transformation ID is received in
     *                                    the response of the [Transform Via File ](https://www.apimatic.io/api-docs-
     *                                    preview/dashboard/60eea3b7a73395c3052d961b/v/3_0#/http/api-
     *                                    endpoints/transformation/transform-via-file) or [Transform Via URL  ](https:
     *                                    //www.apimatic.io/api-docs-
     *                                    preview/dashboard/60eea3b7a73395c3052d961b/v/3_0#/http/api-
     *                                    endpoints/transformation/transform-via-url) calls.
     * @return Response from the API call
     */
    getATransformation(transformationId: string, requestOptions?: RequestOptions): Promise<ApiResponse<Transformation>>;
    /**
     * Delete a particular Transformation performed for an API via the Transformation endpoints.
     *
     * @param transformationId  The ID of the transformation to delete. The transformation ID is received in
     *                                    the response of the [Transform Via File ](https://www.apimatic.io/api-docs-
     *                                    preview/dashboard/60eea3b7a73395c3052d961b/v/3_0#/http/api-
     *                                    endpoints/transformation/transform-via-file) or [Transform Via URL](https://www.
     *                                    apimatic.io/api-docs-preview/dashboard/60eea3b7a73395c3052d961b/v/3_0#/http/api-
     *                                    endpoints/transformation/transform-via-url) calls.
     * @return Response from the API call
     */
    deleteTransformation(transformationId: string, requestOptions?: RequestOptions): Promise<ApiResponse<void>>;
}
