/**
 * Apimatic APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */
import { ApiResponse, FileWrapper, RequestOptions } from '../core';
import { ApiValidationSummary } from '../models/apiValidationSummary';
import { BaseController } from './baseController';
export declare class APIValidationExternalApisController extends BaseController {
    /**
     * Validate an API by uploading the API specification file.
     *
     * You can also specify [API Metadata](https://docs.apimatic.io/manage-apis/apimatic-metadata) while
     * validating the API using this endpoint. When specifying Metadata, the uploaded file will be a zip
     * file containing the API specification file and the `APIMATIC-META` json file.
     *
     * @param file        The API specification file.<br>The type of the specification file should be any
     *                                   of the [supported formats](https://docs.apimatic.io/api-transformer/overview-
     *                                   transformer#supported-input-formats).
     * @return Response from the API call
     */
    validateAPIViaFile(file: FileWrapper, requestOptions?: RequestOptions): Promise<ApiResponse<ApiValidationSummary>>;
    /**
     * Validate an API by providing the URL of the API specification file.
     *
     * You can also specify [API Metadata](https://docs.apimatic.io/manage-apis/apimatic-metadata) while
     * validating the API using this endpoint. When specifying Metadata, the URL provided will be that of a
     * zip file containing the API specification file and the `APIMATIC-META` json file.
     *
     * @param descriptionUrl The URL for the API specification file.<br><br>**Note:** This URL should be
     *                                 publicly accessible.
     * @return Response from the API call
     */
    validateAPIViaURL(descriptionUrl: string, requestOptions?: RequestOptions): Promise<ApiResponse<ApiValidationSummary>>;
}
