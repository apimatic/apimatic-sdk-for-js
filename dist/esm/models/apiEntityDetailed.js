/**
 * Apimatic APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */
import { array, boolean, lazy, optional, string, typedExpandoObject, unknown, } from '../schema';
import { authenticationSchema } from './authentication';
import { codeGenSettingsSchema } from './codeGenSettings';
import { customTypeSchema } from './customType';
import { endpointSchema } from './endpoint';
import { endpointsGroupSchema } from './endpointsGroup';
import { metaDataSchema } from './metaData';
import { serverConfigurationSchema, } from './serverConfiguration';
import { testGenSettingsSchema } from './testGenSettings';
export const apiEntityDetailedSchema = typedExpandoObject({
    id: ['id', string()],
    encryptedId: ['encryptedId', string()],
    apiKey: ['apiKey', string()],
    apiGroupId: ['apiGroupId', string()],
    imageUri: ['imageUri', string()],
    creationDate: ['creationDate', string()],
    mPublic: ['public', boolean()],
    name: ['name', string()],
    description: ['description', string()],
    version: ['version', string()],
    additionalHeaders: ['additionalHeaders', array(string())],
    authentication: ['authentication', lazy(() => authenticationSchema)],
    codeGenSettings: ['codeGenSettings', lazy(() => codeGenSettingsSchema)],
    testGenSettings: ['testGenSettings', lazy(() => testGenSettingsSchema)],
    errors: ['errors', array(string())],
    serverConfiguration: [
        'serverConfiguration',
        lazy(() => serverConfigurationSchema),
    ],
    endpointsGroup: ['endpointsGroup', array(lazy(() => endpointsGroupSchema))],
    metaData: ['metaData', lazy(() => metaDataSchema)],
    endpoints: ['endpoints', array(lazy(() => endpointSchema))],
    customTypes: ['customTypes', array(lazy(() => customTypeSchema))],
}, 'additionalProperties', optional(unknown()));
//# sourceMappingURL=apiEntityDetailed.js.map