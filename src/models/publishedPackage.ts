/**
 * Apimatic APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  lazy,
  optional,
  Schema,
  string,
  typedExpandoObject,
  unknown,
} from '../schema';
import {
  AuthorIdentifiers,
  authorIdentifiersSchema,
} from './authorIdentifiers';

export interface PublishedPackage {
  id: string;
  createdOn: string;
  apiEntityId: string;
  packageRepository: string;
  template: string;
  packageName: string;
  version: string;
  additionalDeploymentInformation?: unknown;
  authorIdentifiers: AuthorIdentifiers;
  link: string;
  additionalProperties?: Record<string, unknown>;
}

export const publishedPackageSchema: Schema<PublishedPackage> = typedExpandoObject(
  {
    id: ['id', string()],
    createdOn: ['createdOn', string()],
    apiEntityId: ['apiEntityId', string()],
    packageRepository: ['packageRepository', string()],
    template: ['template', string()],
    packageName: ['packageName', string()],
    version: ['version', string()],
    additionalDeploymentInformation: [
      'additionalDeploymentInformation',
      optional(unknown()),
    ],
    authorIdentifiers: [
      'authorIdentifiers',
      lazy(() => authorIdentifiersSchema),
    ],
    link: ['link', string()],
  },
  'additionalProperties',
  optional(unknown())
);
