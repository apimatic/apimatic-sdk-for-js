/**
 * Apimatic APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { boolean, lazy, object, optional, Schema, string } from '../schema';
import {
  ApiValidationSummary,
  apiValidationSummarySchema,
} from './apiValidationSummary';

/** Transformation structure encapsulates all the details of a Transformation. */
export interface Transformation {
  /** Unique Transformation Identifier */
  id: string;
  /** Transformation Date and Time */
  transformedOn: string;
  /** Unique User Identifier */
  userId: string;
  /** API Specification file to be transformed */
  inputtedFile: string;
  /** API Specification file transformed to desired format */
  generatedFile: string;
  /** Desired Specification format */
  exportFormat: string;
  /** Source of Transformation */
  transformationSource: string;
  /** Via File or URL */
  transformationInput: string;
  /** CodeGen Engine Version */
  codeGenVersion: string;
  /** Successful Transformation Flag */
  success: boolean;
  importSummary?: ApiValidationSummary;
  apiValidationSummary?: ApiValidationSummary;
}

export const transformationSchema: Schema<Transformation> = object({
  id: ['id', string()],
  transformedOn: ['transformedOn', string()],
  userId: ['userId', string()],
  inputtedFile: ['inputtedFile', string()],
  generatedFile: ['generatedFile', string()],
  exportFormat: ['exportFormat', string()],
  transformationSource: ['transformationSource', string()],
  transformationInput: ['transformationInput', string()],
  codeGenVersion: ['codeGenVersion', string()],
  success: ['success', boolean()],
  importSummary: [
    'importSummary',
    optional(lazy(() => apiValidationSummarySchema)),
  ],
  apiValidationSummary: [
    'apiValidationSummary',
    optional(lazy(() => apiValidationSummarySchema)),
  ],
});
