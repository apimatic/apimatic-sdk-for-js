/**
 * Apimatic APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { array, lazy, object, Schema, string } from '../schema';
import { Field, fieldSchema } from './field';
import {
  ImplementationType,
  implementationTypeSchema,
} from './implementationType';

/** This structure helps creates a new complex model type. */
export interface CustomType {
  /** Unique Type Identifier */
  id: string;
  /** Unique  API Entity identifier */
  apiId: string;
  /** Custom Type Name */
  name: string;
  /** Data Format */
  baseType: string;
  /** How the type is supposed to be implemented */
  implementationType: ImplementationType;
  /** Type Fields */
  fields: Field[];
}

export const customTypeSchema: Schema<CustomType> = object({
  id: ['id', string()],
  apiId: ['apiId', string()],
  name: ['name', string()],
  baseType: ['baseType', string()],
  implementationType: ['implementationType', implementationTypeSchema],
  fields: ['fields', array(lazy(() => fieldSchema))],
});
