/**
 * Apimatic APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  lazy,
  optional,
  Schema,
  string,
  typedExpandoObject,
  unknown,
} from '../schema';
import { MEnvironment, mEnvironmentSchema } from './mEnvironment';
import { Parameter, parameterSchema } from './parameter';

/** Server configurations can be used to create multiple environments, multiple servers that can be used with specific endpoints and server URLs with template paramters. */
export interface ServerConfiguration {
  /** Server Config Identifier */
  id: string;
  /** Default Environment */
  defaultEnvironment: string;
  /** Default Server */
  defaultServer: string;
  /** Environment Identifier and Name */
  environments: MEnvironment[];
  /** Parameter Attributes */
  parameters: Parameter[];
  additionalProperties?: Record<string, unknown>;
}

export const serverConfigurationSchema: Schema<ServerConfiguration> = typedExpandoObject(
  {
    id: ['id', string()],
    defaultEnvironment: ['defaultEnvironment', string()],
    defaultServer: ['defaultServer', string()],
    environments: ['environments', array(lazy(() => mEnvironmentSchema))],
    parameters: ['parameters', array(lazy(() => parameterSchema))],
  },
  'additionalProperties',
  optional(unknown())
);
